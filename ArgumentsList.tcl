# Generated by ectool v9.0000
# Sun Nov 11 19:36:57 2018

modifyWorkflowDefinition {
    {projectName workflowDefinitionName}
    {description newName workflowNameTemplate}
    {}
}
getFormalOutputParameter {
    {projectName formalOutputParameterName}
    {applicationName pipelineName procedureName processName releaseName serviceName}
    {}
}
dumpHeap {
    {fileName}
    {}
    {hidden 1}
}
getComponentsInApplicationTier {
    {projectName applicationName applicationTierName}
    {applicationEntityRevisionId includeArtifactDetail}
    {}
}
createEnvironment {
    {projectName environmentName}
    {applicationName applicationProjectName description environmentEnabled reservationRequired rollingDeployEnabled rollingDeployType serviceName serviceProjectName}
    {}
}
getSchedule {
    {projectName scheduleName}
    {}
    {}
}
setLogLevel {
    {logger level}
    {}
    {hidden 1}
}
getUser {
    {userName}
    {providerName registerLDAPUser traverseHierarchy}
    {}
}
logout {
    {}
    {}
    {}
}
setProperty {
    {propertyName value}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName counter credentialName dashboardName description environmentName environmentTemplateName environmentTemplateTierName environmentTierName expandable extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName value widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 minRequiredArgs 1 auxArgs {valueFile}}
}
modifyProcedure {
    {projectName procedureName}
    {credentialName description jobNameTemplate newName resourceName timeLimit timeLimitUnits workspaceName}
    {}
}
getVersions {
    {}
    {}
    {}
}
getFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationEntityRevisionId applicationName catalogItemName catalogName componentName dashboardName flowName flowStateName gateType pipelineName processName processStepName releaseName reportName serviceName stageName stateDefinitionName stateName taskName workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
deleteGroup {
    {groupName}
    {}
    {}
}
createJobStep {
    {}
    {actualParameter alwaysRun broadcast command comment condition credentialName credential errorHandling exclusive exclusiveMode external jobStepId jobStepName logFileName parallel parentPath postProcessor precondition procedureName projectName releaseExclusive releaseMode resourceName shell status stepName subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {locator 2}
}
getClusters {
    {projectName}
    {environmentName}
    {}
}
deleteRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {environmentName}
    {}
}
modifyEnvironment {
    {projectName environmentName}
    {description environmentEnabled newName reservationRequired rollingDeployEnabled rollingDeployType}
    {}
}
getApplicationServiceMappings {
    {projectName}
    {applicationEntityRevisionId applicationName clusterName clusterProjectName environmentMapName environmentName environmentProjectName includeDetails serviceEntityRevisionId serviceName tierMapName}
    {}
}
getWidget {
    {projectName dashboardName widgetName}
    {}
    {}
}
getEnvironmentMaps {
    {projectName}
    {serviceEntityRevisionId serviceName}
    {}
}
deleteServiceClusterMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
getServerStatus {
    {}
    {block diagnostics serverStateOnly timeout}
    {wrap 1}
}
createWorkflowDefinition {
    {projectName workflowDefinitionName}
    {description workflowNameTemplate}
    {}
}
getRealtimeClusterTopology {
    {projectName clusterName}
    {environmentName}
    {}
}
getFullCredential {
    {credentialName jobStepId}
    {}
    {locator 1 wrap 1 minRequiredArgs 1 auxArgs {value}}
}
createRelease {
    {projectName releaseName}
    {actualParameter description disablePipelineRestart pipelineName pipelineProjectName plannedEndDate plannedStartDate}
    {}
}
getStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {}
    {}
}
deleteEnvironmentTemplate {
    {projectName environmentTemplateName}
    {}
    {}
}
getEventSubscriptions {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
deleteEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
createEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
getEnvironmentApplications {
    {projectName environmentName}
    {}
    {}
}
getCluster {
    {projectName clusterName}
    {environmentName}
    {}
}
createArtifactVersion {
    {version}
    {artifactKey artifactName dependentArtifactVersion description groupId jobStepId repositoryName}
    {locator 2}
}
pauseScheduler {
    {paused}
    {}
    {hidden 1}
}
modifyServiceDependency {
    {projectName serviceName}
    {dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName effectiveDate newName serviceDependencyName snapshotName}
    {}
}
getPartialServiceRevision {
    {projectName serviceName revisionNumber}
    {}
    {}
}
createReservation {
    {projectName reservationName}
    {applicationName beginDate blackout description endDate environmentName environmentProjectName environmentTierName monthDays overlap pipelineName recurrence recurrenceEndDate releaseName serviceName timeZone weekDays}
    {}
}
addResourceToEnvironmentTemplateTier {
    {resourceName projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
untagObject {
    {}
    {applicationName artifactName artifactVersionName componentName entityId entityType environmentName environmentTemplateName flowRuntimeId gateType jobId pipelineName procedureName processName processStepName projectName releaseName resourceName resourceTemplateName serviceName stageName stepName tag taskName workflowDefinitionName workflowId}
    {}
}
releaseNamedLock {
    {lockName}
    {delay}
    {hidden 1}
}
modifyRepository {
    {repositoryName}
    {description newName repositoryDisabled url zoneName}
    {}
}
deleteArtifactVersion {
    {artifactVersionName}
    {}
    {}
}
getSubrelease {
    {projectName releaseName subreleaseName}
    {subreleaseProject}
    {}
}
getWorkspace {
    {workspaceName}
    {}
    {}
}
getRollingDeployPhases {
    {projectName}
    {applicationName applicationProjectName environmentName environmentTierName includeResourceCount}
    {}
}
modifyUtilityResource {
    {projectName utilityResourceName}
    {description environmentName environmentTemplateName newName resourceName}
    {}
}
deletePipelineRun {
    {}
    {flowRuntimeId flowRuntimeName projectName}
    {}
}
getCatalogItem {
    {projectName catalogName catalogItemName}
    {}
    {}
}
deleteFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationName catalogItemName catalogName componentName dashboardName flowName flowStateName gateType pipelineName processName processStepName releaseName reportName serviceName stageName stateDefinitionName stateName taskName updateFormXml workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
pingResource {
    {resourceName}
    {}
    {}
}
getDashboards {
    {}
    {projectName}
    {}
}
deleteEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationName containerName environmentName environmentProjectName serviceMapDetailName serviceName}
    {}
}
createGroup {
    {groupName}
    {userName}
    {}
}
modifyRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {description environmentName newName orderIndex phaseExpression rollingDeployPhaseType}
    {}
}
getDevOpsForesightConfiguration {
    {}
    {}
    {hidden 1}
}
modifyFlowState {
    {projectName flowName flowStateName}
    {condition credentialName description flowStateType newName parallelToPrevious precondition subapplication subflow subprocedure subprocess subproject}
    {hidden 1}
}
getEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationEntityRevisionId applicationName containerName environmentName environmentProjectName serviceEntityRevisionId serviceMapDetailName serviceName}
    {}
}
getReleases {
    {projectName}
    {excludeRuntimeDetails filter firstResult maxResults releaseFlowRuntimeMapping sortKey sortOrder}
    {wrap 1 minRequiredArgs 0}
}
modifyEnvironmentTier {
    {projectName environmentName environmentTierName}
    {batchSize batchSizeType description newName resourceName resourcePhaseMapping resourcePoolName resourcePoolPhaseMapping}
    {}
}
createPipeline {
    {projectName pipelineName}
    {assigneesForSkipStage description disableRestart enabled overrideWorkspace pipelineRunNameTemplate releaseName skipStageMode type workspaceName}
    {}
}
getDeployTopology {
    {projectName}
    {applicationName clusterName environmentName serviceName}
    {}
}
moveJobs {
    {sourceProject destinationProject}
    {}
    {}
}
getReportObjectAttributeValues {
    {reportObjectTypeName reportObjectAttributeName}
    {fromIndex maxValues valueStartsWith}
    {}
}
validateServiceClusterMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
getAccess {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName emulateRestoreInheritance environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
getEnvironment {
    {projectName environmentName}
    {}
    {}
}
findJobSteps {
    {}
    {filter jobId jobStepId numObjects select}
    {hidden 1}
}
createActualParameter {
    {projectName procedureName stepName actualParameterName}
    {applicationName applicationServiceMappingName componentName dashboardName flowName flowStateName processName processStepName releaseName scheduleName serviceClusterMappingName serviceMapDetailName serviceName stateDefinitionName tierMapName transitionDefinitionName value widgetName workflowDefinitionName}
    {}
}
findProperties {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName filter flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId maxIds notifierName numObjects objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName sort stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {hidden 1}
}
getServiceMapDetails {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName environmentMapName environmentName environmentProjectName includeDetails serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
deleteGate {
    {projectName stageName gateType}
    {pipelineName releaseName}
    {}
}
getReportObjectAttribute {
    {reportObjectTypeName reportObjectAttributeName}
    {}
    {}
}
deleteRepository {
    {repositoryName}
    {}
    {}
}
createProcedure {
    {projectName procedureName}
    {credentialName description jobNameTemplate resourceName timeLimit timeLimitUnits workspaceName}
    {}
}
tearDownResource {
    {resourceName}
    {}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
createEmailConfig {
    {configName}
    {description mailFrom mailHost mailPort mailProtocol mailUser mailUserPassword}
    {}
}
getDeployerServices {
    {projectName}
    {releaseName}
    {}
}
getRuntimeWaitDependencies {
    {flowRuntimeId}
    {gateType stageName taskName}
    {}
}
getDashboard {
    {projectName dashboardName}
    {includeDetails}
    {}
}
getSubreleases {
    {projectName releaseName}
    {}
    {}
}
getOutputParameter {
    {outputParameterName}
    {flowRuntimeId jobId jobStepId}
    {}
}
getJobStatus {
    {jobId}
    {}
    {}
}
createTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName targetState}
    {actualParameter condition description trigger}
    {}
}
moveStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {beforeStateDefinition}
    {}
}
getEnvironmentDeployments {
    {projectName environmentName}
    {}
    {}
}
modifyReport {
    {projectName reportName}
    {definition description newName parameters reportObjectTypeName reportQuery title uri}
    {}
}
completeManualTask {
    {flowRuntimeId stageName taskName}
    {action actualParameter evidence gateType}
    {}
}
getEmailConfig {
    {configName}
    {}
    {}
}
createResourceTemplate {
    {projectName resourceTemplateName}
    {cfgMgrParameter cfgMgrPluginKey cfgMgrProcedure cfgMgrProjectName cloudProviderParameter cloudProviderPluginKey cloudProviderProcedure cloudProviderProjectName description}
    {}
}
createEnvironmentTemplateTierMapping {
    {projectName applicationName}
    {applicationEntityRevisionId applicationTierName environmentProjectName environmentTemplateName environmentTemplateTierMapName environmentTemplateTierMappingName environmentTemplateTierName}
    {}
}
getPlugin {
    {pluginName}
    {}
    {}
}
createGate {
    {projectName stageName gateType}
    {condition description pipelineName precondition releaseName}
    {}
}
getRepository {
    {repositoryName}
    {}
    {}
}
getReleaseInventory {
    {projectName releaseName}
    {}
    {}
}
completeJob {
    {jobId}
    {force outcome}
    {}
}
getDeployerConfigurations {
    {projectName}
    {applicationName applicationProjectName releaseName serviceName serviceProjectName stageName}
    {}
}
logStatistic {
    {name type value}
    {}
    {}
}
deleteEmailConfig {
    {configName}
    {}
    {}
}
addDependentsToArtifactVersion {
    {artifactVersionName}
    {dependentArtifactVersion}
    {}
}
deleteTierMapping {
    {projectName applicationName environmentProjectName environmentName applicationTierName}
    {applicationEntityRevisionId}
    {}
}
cleanupArtifactCache {
    {cacheDirectory}
    {force}
    {wrap 1 noresult 1}
}
getEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {containerName environmentProjectName includeResourceDetails serviceName}
    {wrap 1 minRequiredArgs 2}
}
countObjects {
    {objectType}
    {filter viewName}
    {hidden 1}
}
getFlowRuntimeDetails {
    {}
    {flowRuntimeId flowRuntimeName projectName}
    {hidden 1}
}
getTask {
    {projectName taskName}
    {gateType pipelineName releaseName stageName timeZone validate}
    {}
}
modifyProject {
    {projectName}
    {credentialName description newName resourceName tracked workspaceName}
    {}
}
modifyDeployerApplication {
    {projectName applicationName}
    {afterLastRetry applicationProjectName enforceDependencies errorHandling orderIndex processName releaseName retryApprover retryCount retryInterval retryNotificationTemplate retryType smartDeploy snapshotName stageArtifacts}
    {}
}
modifyEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {applicationTierName artifactName artifactSource artifactUrl artifactVersion containerName description environmentProjectName serviceName status}
    {wrap 1 minRequiredArgs 2}
}
getArtifact {
    {artifactName}
    {}
    {}
}
modifyFormalOutputParameter {
    {projectName formalOutputParameterName}
    {applicationName description newName pipelineName procedureName processName releaseName serviceName}
    {}
}
createEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {description resourceCount resourceName resourceTemplateName resourceTemplateProjectName}
    {}
}
createReport {
    {projectName reportName}
    {definition description parameters reportObjectTypeName reportQuery title uri}
    {}
}
completeManualProcessStep {
    {jobStepId}
    {action actualParameter comment}
    {}
}
modifyEnvironmentTemplate {
    {projectName environmentTemplateName}
    {description newName}
    {}
}
getUtilityResources {
    {projectName}
    {environmentName environmentTemplateName}
    {}
}
moveTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {beforeTransitionDefinition}
    {}
}
getLicense {
    {productName featureName}
    {}
    {}
}
getApplication {
    {projectName applicationName}
    {applicationEntityRevisionId}
    {}
}
completeRuntimeWaitDependency {
    {}
    {dependentFlowRuntimeId dependentGateType dependentPipelineName dependentProjectName dependentReleaseName dependentStageName dependentTaskName flowRuntimeId gateType pipelineName projectName releaseName runtimeWaitDependencyName stageName taskName}
    {}
}
shutdownServer {
    {}
    {force restart}
    {}
}
setOutputParameter {
    {outputParameterName value}
    {flowRuntimeId jobId jobStepId}
    {}
}
getProject {
    {projectName}
    {}
    {}
}
createTaskGroup {
    {projectName}
    {gateType groupName groupRunType pipelineName releaseName stageName taskName}
    {}
}
getJobSummaries {
    {}
    {filter includeLastSuccess maxFailedSteps maxJobs maxRunningSteps}
    {hidden 1}
}
deleteZone {
    {zoneName}
    {}
    {}
}
createProject {
    {projectName}
    {credentialName description resourceName tracked workspaceName}
    {}
}
deleteDirectoryProvider {
    {providerName}
    {}
    {}
}
createReportObjectAssociation {
    {reportObjectTypeName associatedType}
    {description required sourceFields targetFields}
    {}
}
getStages {
    {projectName}
    {pipelineName releaseName}
    {}
}
createRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {description environmentName orderIndex phaseExpression rollingDeployPhaseType}
    {}
}
reloadSetupScripts {
    {}
    {}
    {hidden 1}
}
modifyNote {
    {noteName}
    {newName note projectName releaseName}
    {}
}
createStage {
    {projectName stageName}
    {afterStage beforeStage colorCode completed completionType condition description duration incompletePostStages parallelToPrevious pipelineName plannedEndDate plannedStartDate precondition releaseName resourceName timeZone waitForPlannedStartDate}
    {}
}
runProcedure {
    {projectName}
    {actualParameter credentialName credential destinationProject password priority procedureName scheduleName userName}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
graphStateMachine {
    {jobId}
    {cluster}
    {hidden 1}
}
getDashboardVisualizations {
    {}
    {}
    {}
}
createServiceMapDetail {
    {projectName containerName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName command cpuCount cpuLimit credentialName entryPoint environmentMapName environmentName environmentProjectName imageName imageVersion memoryLimit memorySize registryUri serviceClusterMappingName serviceEntityRevisionId serviceMapDetailName serviceName tierMapName volumeMount}
    {}
}
getDirectoryProvider {
    {providerName}
    {}
    {}
}
modifyStage {
    {projectName stageName}
    {afterStage beforeStage colorCode completed completionType condition description duration incompletePostStages newName parallelToPrevious pipelineName plannedEndDate plannedStartDate precondition releaseName resourceName timeZone waitForPlannedStartDate}
    {}
}
getFlow {
    {projectName flowName}
    {}
    {hidden 1}
}
createApplicationDependency {
    {projectName applicationName}
    {applicationDependencyName dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName effectiveDate snapshotName}
    {}
}
deleteCatalog {
    {projectName catalogName}
    {}
    {}
}
completeFlowRuntimeState {
    {flowRuntimeStateId}
    {action evidence}
    {hidden 1}
}
createEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationEntityRevisionId applicationName containerName description environmentName environmentProjectName serviceEntityRevisionId serviceMapDetailName serviceName type value}
    {}
}
getReports {
    {projectName}
    {}
    {}
}
deleteEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {containerName environmentProjectName serviceName}
    {wrap 1 minRequiredArgs 2}
}
createSnapshot {
    {projectName applicationName snapshotName}
    {componentVersion containerVersions description environmentName environmentProjectName serviceName}
    {wrap 1 minRequiredArgs 2}
}
createReportObjectAttribute {
    {reportObjectTypeName reportObjectAttributeName}
    {description displayName enumerationValues required type}
    {}
}
modifyEmailConfig {
    {configName}
    {description mailFrom mailHost mailPort mailProtocol mailUser mailUserPassword newName}
    {}
}
clone {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName cloneName cloneTaskGroup clusterName componentName configName containerName credentialName dashboardName disableProjectTracking environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId providerName reducedDetailChangeHistory releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {wrap 1}
}
runFlow {
    {projectName flowName}
    {actualParameter credential priority startingState}
    {hidden 1}
}
deleteContainer {
    {projectName containerName}
    {applicationName serviceName}
    {}
}
createEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {applicationTierName artifactName artifactSource artifactUrl artifactVersion containerName description environmentProjectName serviceName status}
    {wrap 1 minRequiredArgs 2}
}
getWaitingTasks {
    {flowRuntimeId stageName}
    {deployerTaskName taskName}
    {wrap 1}
}
modifyTierMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationTierName environmentName environmentProjectName environmentTierName newName resourceExpression tierMapName tierMappingName}
    {}
}
modifyGateway {
    {gatewayName}
    {description gatewayDisabled hostName1 hostName2 newName port1 port2 resourceName1 resourceName2}
    {}
}
getNotes {
    {}
    {projectName releaseName}
    {}
}
modifyApplicationTier {
    {projectName applicationName applicationTierName}
    {description newName}
    {}
}
waitForCompletion {
    {}
    {flowRuntimeId jobId}
    {hidden 1}
}
seedEnvironmentInventory {
    {projectName environmentName applicationName applicationProcessName status}
    {artifactName artifactSource artifactUrl artifactVersion componentName environmentProjectName resourceName snapshotName}
    {}
}
deleteStage {
    {projectName stageName}
    {pipelineName releaseName}
    {}
}
modifyZone {
    {zoneName}
    {description newName}
    {}
}
modifyReportingFilter {
    {projectName dashboardName reportingFilterName}
    {description newName operator orderIndex parameterName reportObjectTypeName required type widgetName}
    {}
}
createDashboard {
    {projectName dashboardName}
    {description layout phase type}
    {}
}
removeResourcesFromPool {
    {resourcePoolName}
    {resourceName}
    {}
}
getManifest {
    {artifactVersionName}
    {}
    {wrap 1 noresult 1}
}
setDatabaseConfiguration {
    {}
    {customDatabaseDialect customDatabaseDriver customDatabaseUrl databaseName databaseType hostName ignorePasskeyMismatch ignoreServerMismatch password port preserveSessions userName}
    {wrap 1}
}
moveRepository {
    {repositoryName}
    {beforeRepositoryName}
    {}
}
getZones {
    {}
    {}
    {}
}
getServiceMapDetail {
    {projectName containerName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName environmentMapName environmentName environmentProjectName includeDetails serviceClusterMappingName serviceEntityRevisionId serviceMapDetailName serviceName tierMapName}
    {}
}
getDevOpsInsightServerConfiguration {
    {}
    {}
    {}
}
completeRelease {
    {}
    {projectName releaseId releaseName}
    {}
}
getDeployerApplications {
    {projectName}
    {releaseName}
    {}
}
getComponent {
    {projectName componentName}
    {applicationEntityRevisionId applicationName}
    {}
}
getGate {
    {projectName stageName gateType}
    {pipelineName releaseName}
    {}
}
restoreAclInheritance {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
createCatalog {
    {projectName catalogName}
    {description iconUrl}
    {}
}
createUtilityResource {
    {projectName utilityResourceName}
    {description environmentName environmentTemplateName resourceName}
    {}
}
addComponentToApplicationTier {
    {projectName applicationName applicationTierName componentName}
    {componentProjectName}
    {}
}
setTierResourcePhase {
    {projectName environmentName environmentTierName}
    {resourceName resourcePhaseMapping resourcePoolName resourcePoolPhaseMapping rollingDeployPhaseName}
    {}
}
addResourcePoolToEnvironmentTier {
    {resourcePoolName projectName environmentName environmentTierName}
    {rollingDeployPhaseName}
    {}
}
modifyFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationName catalogItemName catalogName componentName dashboardName defaultValue description expansionDeferred flowName flowStateName gateType label newName orderIndex pipelineName processName processStepName releaseName reportName required serviceName stageName stateDefinitionName stateName taskName type updateFormXml workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
getGroups {
    {}
    {filter includeAll maximum}
    {wrap 1}
}
removeResourceFromEnvironmentTemplateTier {
    {resourceName projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getAllWaitingTasks {
    {projectName}
    {releaseName}
    {}
}
runReport {
    {projectName reportName}
    {actualParameter dashboardName dashboardProjectName definition filter previewMode reportObjectTypeName reportQuery uri widgetName}
    {}
}
dumpStatistics {
    {}
    {clearStatistics dumpLapTimes fileName format}
    {hidden 1}
}
getEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
modifyApplicationServiceMapping {
    {projectName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clearActualParameters clusterName clusterProjectName defaultCapacity environmentMapName environmentName environmentProjectName maxCapacity minCapacity serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName volume}
    {}
}
deleteWidget {
    {projectName dashboardName widgetName}
    {}
    {}
}
getProcedure {
    {projectName procedureName}
    {}
    {}
}
getReportingFilter {
    {projectName dashboardName reportingFilterName}
    {widgetName}
    {}
}
deleteObjects {
    {objectType}
    {filter maxIds sort}
    {hidden 1}
}
removeDependentsFromArtifactVersion {
    {artifactVersionName}
    {dependentArtifactVersion}
    {}
}
modifyStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {actualParameter clearActualParameters description newName startable subprocedure subproject substartingState subworkflowDefinition}
    {}
}
attachParameter {
    {projectName procedureName stepName formalParameterName}
    {applicationName componentApplicationName componentName gateType pipelineName processName processStepName serviceName stageName stateDefinitionName taskName workflowDefinitionName}
    {}
}
deleteProcessDependency {
    {projectName processName processStepName targetProcessStepName}
    {applicationName componentApplicationName componentName serviceApplicationName serviceName}
    {}
}
modifyWaitDependency {
    {projectName}
    {allowSkip assigneesForSkip dependentGateType dependentPipelineName dependentProjectName dependentReleaseName dependentStageName dependentTaskName gateType newName pipelineName releaseName stageName taskName waitDependencyName waitForTriggeredPipelines waitForTriggeredReleases}
    {}
}
getProcess {
    {projectName processName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName serviceApplicationName serviceEntityRevisionId serviceName}
    {}
}
getWidgets {
    {projectName dashboardName}
    {}
    {}
}
installPlugin {
    {url}
    {disableProjectTracking force reducedDetailChangeHistory}
    {wrap 1 xpath {/responses/response[plugin]}}
}
abortFlowRuntime {
    {}
    {flowRuntimeId flowRuntimeName force projectName}
    {hidden 1}
}
createDeployerConfiguration {
    {projectName applicationName stageName}
    {actualParameter applicationProjectName deployerConfigurationName deployerTaskName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName insertRollingDeployManualStep processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase serviceName serviceProjectName skipDeploy}
    {wrap 1 minRequiredArgs 1}
}
findArtifactVersions {
    {}
    {artifactKey artifactName artifactVersionName filter groupId includeDependents jobStepId versionRange}
    {locator 2 hidden 1}
}
removeTaskGroup {
    {projectName}
    {gateType groupName pipelineName releaseName stageName}
    {}
}
modifyCredential {
    {projectName credentialName}
    {description newName password passwordRecoveryAllowed userName}
    {}
}
modifyHook {
    {hookName}
    {broadcast description hookParameter hookType newName procedureName procedurePluginKey procedureProjectName projectName resourceTemplateName}
    {}
}
modifyProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName counter credentialName credentialProtected dashboardName description environmentName environmentTemplateName environmentTemplateTierName environmentTierName expandable extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId newName notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId propertyType releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName value widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 auxArgs {valueFile}}
}
createFormalOutputParameter {
    {projectName formalOutputParameterName}
    {applicationName description pipelineName procedureName processName releaseName serviceName}
    {}
}
runScoringPipeline {
    {}
    {buildNumber}
    {hidden 1}
}
createDeployerService {
    {projectName serviceName}
    {afterLastRetry enforceDependencies errorHandling orderIndex processName releaseName retryApprover retryCount retryInterval retryNotificationTemplate retryType serviceProjectName snapshotName}
    {}
}
expandString {
    {value}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 minRequiredArgs 0 auxArgs {valueFile} xpath {/responses/response/value}}
}
modifyArtifactVersion {
    {artifactVersionName}
    {artifactVersionState dependentArtifactVersion description newName removeAllDependentArtifactVersions repositoryName}
    {}
}
getSnapshots {
    {projectName applicationName}
    {serviceName}
    {wrap 1 minRequiredArgs 1}
}
createGateway {
    {gatewayName}
    {description gatewayDisabled hostName1 hostName2 port1 port2 resourceName1 resourceName2}
    {}
}
getApplicationTiersInComponent {
    {projectName componentName}
    {applicationEntityRevisionId applicationName}
    {}
}
modifyCluster {
    {projectName clusterName}
    {description environmentName newName pluginKey pluginProjectName providerClusterName providerProjectName provisionParameter provisionProcedure}
    {}
}
getCatalogItems {
    {projectName catalogName}
    {}
    {}
}
deleteFormalOutputParameter {
    {projectName formalOutputParameterName}
    {applicationName pipelineName procedureName processName releaseName serviceName}
    {}
}
modifyRelease {
    {projectName releaseName}
    {actualParameter clearActualParameters description disablePipelineRestart newName pipelineName pipelineProjectName plannedEndDate plannedStartDate}
    {}
}
getTag {
    {tagName}
    {}
    {}
}
deletePipeline {
    {projectName pipelineName}
    {releaseName}
    {}
}
getPathToProperty {
    {}
    {fieldName fieldType format sourceId sourceType targetId targetParentId targetParentType targetType}
    {}
}
createJob {
    {}
    {destinationProject jobNameTemplate procedureName projectName status}
    {wrap 1}
}
deleteCluster {
    {projectName clusterName}
    {environmentName}
    {}
}
getUtilityResource {
    {projectName utilityResourceName}
    {environmentName environmentTemplateName}
    {}
}
getDeployerApplication {
    {projectName applicationName}
    {applicationProjectName releaseName}
    {}
}
removeResourceTemplateFromEnvironmentTemplateTier {
    {projectName environmentTemplateName resourceTemplateName environmentTemplateTierName}
    {resourceTemplateProjectName}
    {}
}
modifyServiceClusterMapping {
    {projectName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clearActualParameters clusterName clusterProjectName defaultCapacity environmentMapName environmentName environmentProjectName maxCapacity minCapacity serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName volume}
    {}
}
deleteComponent {
    {projectName componentName}
    {applicationName}
    {}
}
getWidgetFilterOverride {
    {projectName dashboardName widgetName dashboardFilterName}
    {}
    {}
}
deleteReservation {
    {projectName reservationName}
    {}
    {}
}
tearDown {
    {}
    {environmentName projectName resourceName resourcePoolName}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId} hidden 1}
}
export {
    {fileName}
    {compress disableProjectTracking download excludeJobs objectId objectType path reducedDetailChangeHistory relocatable revisionNumber safeMode withAcls withNotifiers withVersionNumbers}
    {}
}
modifyFlow {
    {projectName flowName}
    {actualParameter clearActualParameters credentialName description newName}
    {hidden 1}
}
deleteNote {
    {noteName}
    {projectName releaseName}
    {}
}
getReportObjectAssociations {
    {reportObjectTypeName}
    {}
    {}
}
evalDsl {
    {dsl}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName debug describe environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId parameters path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serverLibraryPath serviceName sessionPassword snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName timeout transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 auxArgs {dslFile parametersFile}}
}
getZone {
    {zoneName}
    {}
    {}
}
deleteResourcePool {
    {resourcePoolName}
    {}
    {}
}
deleteApplicationDependency {
    {projectName applicationName}
    {applicationDependencyName dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName snapshotName}
    {}
}
completeJobStep {
    {jobStepId}
    {exitCode force outcome}
    {}
}
retryTask {
    {flowRuntimeId stageName taskName}
    {action comment gateType subapplication subproject subservice}
    {}
}
tearDownResourcePool {
    {}
    {resourcePoolName}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
getStateDefinitions {
    {projectName workflowDefinitionName}
    {includeFormalParameters startableOnly}
    {}
}
modifyGate {
    {projectName stageName gateType}
    {condition description pipelineName precondition releaseName}
    {}
}
modifyReportObjectAssociation {
    {reportObjectTypeName associatedType}
    {description required sourceFields targetFields}
    {}
}
deleteReportObjectAttribute {
    {reportObjectTypeName reportObjectAttributeName}
    {}
    {}
}
testDirectoryProvider {
    {userName password}
    {allowNestedGroupsApprovers commonGroupNameAttribute domainName emailAttribute enableGroups fullUserNameAttribute groupBase groupMemberAttributes groupMemberFilter groupNameAttribute groupSearchFilter managerDn managerPassword membershipAttribute membershipFilter nestedGroupDepthLimit notifyUsersInNestedGroups providerType realm traverseHierarchy url useDefaults useSSL userBase userNameAttribute userSearchFilter userSearchSubtree}
    {}
}
revert {
    {objectId objectType revisionNumber}
    {}
    {}
}
createSearchFilter {
    {displayName objectType}
    {description searchQuery}
    {}
}
validateDatabase {
    {}
    {options}
    {hidden 1}
}
getResourceTemplate {
    {projectName resourceTemplateName}
    {}
    {}
}
deleteEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getResourceUsage {
    {}
    {}
    {}
}
getEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
createProcessDependency {
    {projectName processName processStepName targetProcessStepName}
    {applicationName branchCondition branchConditionName branchConditionType branchType componentApplicationName componentName serviceApplicationName serviceName}
    {}
}
tunePerformance {
    {}
    {apiQueueSize dbConnectionPoolSize dbThreadPoolSize dispatchQueueSize quartzQueueSize stateMachineQueueSize}
    {hidden 1}
}
resolveRoute {
    {toRepositoryName}
    {fromAgentId fromResourceName}
    {hidden 1}
}
modifyEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationEntityRevisionId applicationName containerName description environmentName environmentProjectName newName serviceEntityRevisionId serviceMapDetailName serviceName type value}
    {}
}
getAvailableResourcesForEnvironment {
    {}
    {includePoolUsage objectTypeToReturn}
    {}
}
exportPlugin {
    {pluginName fileName}
    {download}
    {}
}
addUsersToGroup {
    {groupName}
    {userName}
    {}
}
getProcesses {
    {projectName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName serviceApplicationName serviceEntityRevisionId serviceName}
    {}
}
getWaitDependencies {
    {projectName}
    {gateType pipelineName releaseName stageName taskName}
    {}
}
getResourceTemplates {
    {projectName}
    {}
    {}
}
deleteWorkspace {
    {workspaceName}
    {}
    {}
}
publishArtifactVersion {
    {}
    {version artifactName groupId artifactKey compress followSymlinks includePatterns excludePatterns patternsFile fromDirectory description repositoryName dependentArtifactVersion}
    {locator 2 wrap 1 xpath /}
}
deleteLicense {
    {productName featureName}
    {}
    {}
}
deleteServiceMapDetail {
    {projectName containerName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceEntityRevisionId serviceMapDetailName serviceName tierMapName}
    {}
}
getSnapshot {
    {projectName applicationName snapshotName}
    {serviceName}
    {wrap 1 minRequiredArgs 2}
}
modifyEnvironmentTemplateTierMapping {
    {projectName applicationName}
    {applicationEntityRevisionId applicationTierName environmentProjectName environmentTemplateName environmentTemplateTierMapName environmentTemplateTierMappingName environmentTemplateTierName newName}
    {}
}
modifyPipeline {
    {projectName pipelineName}
    {assigneesForSkipStage description disableRestart enabled newName overrideWorkspace pipelineRunNameTemplate releaseName skipStageMode type workspaceName}
    {}
}
getLicenseUsage {
    {}
    {}
    {}
}
createEnvironmentTemplate {
    {projectName environmentTemplateName}
    {description}
    {}
}
getProcessSteps {
    {projectName processName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName serviceApplicationName serviceEntityRevisionId serviceName}
    {}
}
getObjects {
    {}
    {includeAccess includeLatestRevision objectId select}
    {hidden 1}
}
createService {
    {projectName serviceName}
    {addDeployProcess applicationName defaultCapacity description maxCapacity minCapacity volume}
    {}
}
getJobSummary {
    {}
    {jobId jobProperties jobStepProperties orderStepsByIndex}
    {}
}
getApplicationTier {
    {projectName applicationName applicationTierName}
    {applicationEntityRevisionId}
    {}
}
getEnvironmentInventoryItems {
    {projectName environmentName}
    {includeResourceDetails}
    {}
}
getPartialApplicationRevision {
    {projectName applicationName revisionNumber}
    {}
    {}
}
promotePlugin {
    {pluginName}
    {promoted}
    {wrap 1 xpath {/responses/response[plugin]}}
}
getProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName expand extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 xpath {/responses/response/property/value /responses/response/property}}
}
createFlowState {
    {projectName flowName flowStateName}
    {condition credentialName description flowStateType parallelToPrevious precondition subapplication subflow subprocedure subprocess subproject}
    {hidden 1}
}
removeResourcePoolFromEnvironmentTier {
    {resourcePoolName projectName environmentName environmentTierName}
    {}
    {}
}
changeOwner {
    {}
    {applicationName applicationTierName componentName configName credentialName dashboardName environmentName environmentTemplateName environmentTierName groupName newOwnerName notifierName pluginName procedureName processName processStepName projectName propertySheetId reportName reportObjectTypeName resourceName scheduleName serviceName stateDefinitionName stepName transitionDefinitionName userName widgetName workflowDefinitionName workspaceName}
    {}
}
signCertificate {
    {certificateData}
    {}
    {hidden 1}
}
modifyService {
    {projectName serviceName}
    {applicationName defaultCapacity description maxCapacity minCapacity newName volume}
    {}
}
evalScript {
    {value}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 xpath {/responses/response/value}}
}
createTask {
    {projectName taskName}
    {actualParameter advancedMode afterLastRetry afterTask alwaysRun approver beforeTask condition deployerExpression deployerRunType description duration emailConfigName enabled environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName errorHandling firstTask gateCondition gateType groupName groupRunType insertRollingDeployManualStep instruction keepOnError notificationEnabled notificationTemplate parallelToPrevious pipelineName plannedEndDate plannedStartDate precondition releaseName requiredApprovalsCount resourceName retryCount retryInterval retryType rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase skippable snapshotName stageName stageSummaryParameters stagesToRun startTime startingStage subErrorHandling subapplication subpipeline subpluginKey subprocedure subprocess subproject subrelease subreleasePipeline subreleasePipelineProject subreleaseSuffix subservice subworkflowDefinition subworkflowStartingState taskProcessType taskType tierResourceCount timeZone triggerType useApproverAcl waitForPlannedStartDate workspaceName}
    {}
}
createEnvironmentTemplateTierMap {
    {projectName applicationName environmentProjectName environmentTemplateName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
getFormalParameterOptions {
    {formalParameterName procedureName}
    {actualParameter configurationParameter credential pluginName projectName}
    {hidden 1}
}
getResourceTemplatesInEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getEnvironmentTemplateTiers {
    {projectName environmentTemplateName}
    {includeTemplateDetails}
    {}
}
modifySearchFilter {
    {displayName objectType}
    {description newName newObjectType searchQuery userName}
    {}
}
deleteFlowRuntime {
    {}
    {flowRuntimeId flowRuntimeName projectName}
    {hidden 1}
}
getSteps {
    {projectName procedureName}
    {}
    {}
}
deleteTierMap {
    {projectName applicationName environmentProjectName environmentName}
    {applicationEntityRevisionId}
    {}
}
getPipelineRuntimesForSchedule {
    {projectName scheduleName}
    {}
    {hidden 1}
}
createEnvironmentMap {
    {projectName environmentName}
    {description environmentMapName environmentProjectName serviceEntityRevisionId serviceName}
    {}
}
deleteProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1}
}
modifyEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
deleteEmailNotifier {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
deleteEnvironment {
    {projectName environmentName}
    {}
    {}
}
deleteApplication {
    {projectName applicationName}
    {foreground}
    {}
}
deleteFlowState {
    {projectName flowName flowStateName}
    {}
    {hidden 1}
}
getProvisionedEnvironments {
    {}
    {flowRuntimeId jobId stageName}
    {}
}
searchEntityChange {
    {}
    {entityId entityPath entityType modifiedBy timeSince timeUntil}
    {}
}
getRetrievedArtifacts {
    {jobId}
    {componentName resourceName}
    {}
}
getResourcesInEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
getResource {
    {resourceName}
    {}
    {}
}
createFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationName catalogItemName catalogName componentName dashboardName defaultValue description expansionDeferred flowName flowStateName gateType label orderIndex pipelineName processName processStepName releaseName reportName required serviceName stageName stateDefinitionName stateName taskName type updateFormXml workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
deleteJob {
    {jobId}
    {waitForDeleteToComplete}
    {}
}
getReportObjectTypes {
    {}
    {includeDetails}
    {}
}
getPorts {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName containerName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
getPipelineStageRuntimeTasks {
    {flowRuntimeId}
    {firstResult maxResults sortKey sortOrder stageName stageRunNumber}
    {}
}
deleteTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {}
    {}
}
getPipeline {
    {projectName pipelineName}
    {releaseName}
    {}
}
getCredentials {
    {projectName}
    {usableOnly}
    {}
}
createServiceDependency {
    {projectName serviceName}
    {dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName effectiveDate serviceDependencyName snapshotName}
    {}
}
createTierMap {
    {projectName applicationName environmentProjectName environmentName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
removeUsersFromGroup {
    {groupName}
    {userName}
    {}
}
getState {
    {projectName workflowName stateName}
    {}
    {}
}
deleteWaitDependency {
    {projectName}
    {dependentGateType dependentPipelineName dependentProjectName dependentReleaseName dependentStageName dependentTaskName gateType pipelineName releaseName stageName taskName waitDependencyName}
    {}
}
modifyCatalog {
    {projectName catalogName}
    {description iconUrl newName}
    {}
}
deleteCatalogItem {
    {projectName catalogName catalogItemName}
    {}
    {}
}
getUsers {
    {}
    {filter includeAll maximum searchField sortKey sortOrder}
    {wrap 1}
}
getFlowState {
    {projectName flowName flowStateName}
    {}
    {hidden 1}
}
getCredential {
    {projectName credentialName}
    {}
    {}
}
deleteProject {
    {projectName}
    {foreground}
    {}
}
getStates {
    {projectName workflowName}
    {}
    {}
}
createTag {
    {tagName}
    {description}
    {}
}
detachParameter {
    {projectName procedureName stepName formalParameterName}
    {applicationName componentApplicationName componentName gateType pipelineName processName processStepName serviceName stageName stateDefinitionName taskName workflowDefinitionName}
    {}
}
modifySchedule {
    {projectName scheduleName}
    {actualParameter beginDate clearActualParameters clearPipelineParameters credentialName description endDate environmentMapName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName environmentTemplateTierMapName insertRollingDeployManualStep interval intervalUnits misfirePolicy monthDays newName pipelineName pipelineParameter priority procedureName processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase scheduleDisabled snapshotName stagesToRun startTime startingStage startingStateName stopTime tierMapName tierResourceCount timeZone weekDays workflowName}
    {}
}
createCredential {
    {projectName credentialName userName password}
    {description passwordRecoveryAllowed}
    {minRequiredArgs 2}
}
getWidgetFilterOverrides {
    {projectName dashboardName widgetName}
    {}
    {}
}
getResourcePoolsInEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
removeDeployerConfiguration {
    {projectName applicationName stageName}
    {applicationProjectName deployerConfigurationName deployerTaskName releaseName serviceName serviceProjectName}
    {wrap 1 minRequiredArgs 1}
}
getEntityChangeDetails {
    {entityId entityType revisionNumber}
    {}
    {}
}
modifyEnvironmentTemplateTierMap {
    {projectName applicationName environmentProjectName environmentTemplateName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
deleteWorkflow {
    {projectName workflowName}
    {deleteProcesses}
    {}
}
getAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
removeSubrelease {
    {projectName releaseName subreleaseName}
    {subreleaseProject}
    {}
}
setJobName {
    {jobId newName}
    {}
    {envArgTrans {COMMANDER_JOBID 0} envRequired {jobName}}
}
getServices {
    {projectName}
    {applicationEntityRevisionId applicationName includeDetails includeEntityRevisions}
    {}
}
modifyReportObjectAttribute {
    {reportObjectTypeName reportObjectAttributeName}
    {description displayName enumerationValues newName required type}
    {}
}
getJobNotes {
    {jobId}
    {}
    {}
}
deleteService {
    {projectName serviceName}
    {applicationName}
    {}
}
modifyActualParameter {
    {projectName procedureName stepName actualParameterName}
    {applicationName applicationServiceMappingName componentName dashboardName flowName flowStateName newName processName processStepName releaseName scheduleName serviceClusterMappingName serviceMapDetailName serviceName stateDefinitionName tierMapName transitionDefinitionName value widgetName workflowDefinitionName}
    {}
}
login {
    {userName password}
    {}
    {wrap 1}
}
getJobDetails {
    {jobId}
    {structureOnly}
    {}
}
deleteRelease {
    {projectName releaseName}
    {}
    {}
}
deleteCredential {
    {projectName credentialName}
    {}
    {}
}
createTierMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationTierName environmentName environmentProjectName environmentTierName resourceExpression tierMapName tierMappingName}
    {}
}
getJobsForSchedule {
    {projectName scheduleName}
    {}
    {}
}
getEmailConfigs {
    {}
    {}
    {}
}
runDiscovery {
    {pluginKey pluginName projectName environmentName environmentTierName configurationName}
    {resourceName}
    {}
}
getApplicationServiceMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentMapName environmentName environmentProjectName includeDetails serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
getPipelineRuntimes {
    {}
    {filter firstResult flowRuntimeId flowRuntimeName maxResults pipelineName projectName releaseId sortKey sortOrder}
    {}
}
getResourcePool {
    {resourcePoolName}
    {}
    {}
}
modifyWorkspace {
    {workspaceName}
    {agentDrivePath agentUncPath agentUnixPath credentialName description local newName workspaceDisabled zoneName}
    {}
}
getServiceClusterMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentMapName environmentName environmentProjectName includeDetails serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
abortAllJobs {
    {}
    {force reason}
    {}
}
getPort {
    {projectName portName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName containerName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
modifyTierMap {
    {projectName applicationName environmentProjectName environmentName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
createProcessStep {
    {projectName processName processStepName}
    {actualParameter afterLastRetry afterProcessStep alwaysRun applicationName applicationTierName assignee beforeProcessStep componentApplicationName componentName componentRollback credentialName dependencyJoinType description emailConfigName errorHandling includeCompParameterRef instruction notificationEnabled notificationTemplate processStepType retryCount retryInterval retryType rollbackSnapshot rollbackType rollbackUndeployProcess serviceApplicationName serviceName skipRollbackIfUndeployFails smartRollback subcomponent subcomponentApplicationName subcomponentProcess subprocedure subproject subservice subserviceProcess timeLimit timeLimitUnits useUtilityResource utilityResourceName workingDirectory workspaceName}
    {}
}
getEmailNotifier {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
modifyJobStep {
    {jobStepId}
    {status}
    {}
}
addResourceTemplateToEnvironmentTemplateTier {
    {projectName environmentTemplateName resourceTemplateName environmentTemplateTierName}
    {resourceCount resourceTemplateProjectName}
    {}
}
deleteApplicationServiceMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName}
    {}
}
deleteEnvironmentMap {
    {projectName environmentName}
    {environmentProjectName serviceEntityRevisionId serviceName}
    {}
}
getProcessDependencies {
    {projectName processName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName serviceApplicationName serviceEntityRevisionId serviceName}
    {}
}
deleteProcessStep {
    {projectName processName processStepName}
    {applicationName componentApplicationName componentName serviceApplicationName serviceName}
    {}
}
deleteStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {}
    {}
}
finishCommand {
    {agentRequestId status}
    {deletedLogFile deletedPostpLogFile elapsedTime errorMessage exit maxProtocolVersion minProtocolVersion pingToken postpExit protocolVersion version}
    {hidden 1}
}
modifyWidget {
    {projectName dashboardName widgetName}
    {actualParameter attributeDataType attributePath clearAttributeDataTypes clearAttributePaths clearColors clearLinkParameters clearVisualizationProperties colorRanges color description iconUrl linkParameter linkTarget newName orderIndex phase reportName reportProjectName section title visualization visualizationProperty}
    {}
}
createFlow {
    {projectName flowName}
    {actualParameter credentialName description}
    {hidden 1}
}
deleteAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
getNote {
    {noteName}
    {projectName releaseName}
    {}
}
getReportingFilters {
    {projectName dashboardName}
    {widgetName}
    {}
}
getActualParameter {
    {actualParameterName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName componentName dashboardName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName jobId jobStepId procedureName processName processStepName projectName releaseName scheduleName serviceClusterMappingName serviceMapDetailName serviceName stateDefinitionName stateName stepName tierMapName transitionDefinitionName transitionName widgetName workflowDefinitionName workflowName}
    {}
}
createApplication {
    {projectName applicationName}
    {description}
    {}
}
createProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName counter credentialName credentialProtected dashboardName description environmentName environmentTemplateName environmentTemplateTierName environmentTierName expandable extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId propertyType releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName value widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 auxArgs {valueFile}}
}
runWorkflow {
    {projectName workflowDefinitionName}
    {actualParameter credential priority scheduleName startingState}
    {}
}
getJobStepDetails {
    {jobStepId}
    {structureOnly}
    {}
}
detachCredential {
    {projectName credentialName}
    {applicationName applicationProjectName componentName deployerTaskName gateType pipelineName procedureName processName processStepName releaseName scheduleName serviceName serviceProjectName stageName stateDefinitionName stepName taskName workflowDefinitionName}
    {}
}
deleteSchedule {
    {projectName scheduleName}
    {}
    {}
}
getProcessStep {
    {projectName processName processStepName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName serviceApplicationName serviceEntityRevisionId serviceName}
    {}
}
completeWorkflow {
    {projectName workflowName}
    {}
    {}
}
getEnvironmentTemplate {
    {projectName environmentTemplateName}
    {}
    {}
}
getPropertyHierarchy {
    {}
    {applicationEntityRevisionId applicationName applicationTierName clusterName componentName containerName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName gateType pipelineName processName processStepName projectName releaseName resourceTemplateName serviceName snapshotName stageName taskName}
    {}
}
modifyAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName changePermissionsPrivilege clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName executePrivilege flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId modifyPrivilege notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId readPrivilege releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
sendEmail {
    {}
    {attachment bcc cc configName header html inline mailFrom mailHost mailPort mailProtocol mailUser mailUserPassword multipartMode raw subject text to}
    {wrap 1 auxArgs {textFile htmlFile rawFile}}
}
setPipelineRunName {
    {newName}
    {flowRuntimeId}
    {}
}
createApplicationTier {
    {projectName applicationName applicationTierName}
    {description}
    {}
}
checkAccess {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
provisionCluster {
    {projectName}
    {cluster environmentName}
    {xpath {/responses/response/jobId}}
}
removeDeployerApplication {
    {projectName applicationName}
    {applicationProjectName releaseName}
    {}
}
createZone {
    {zoneName}
    {description}
    {}
}
moveDirectoryProvider {
    {providerName}
    {beforeProviderName}
    {}
}
getArtifactVersion {
    {artifactVersionName}
    {includeRetrieverJobSteps includeRetrieverJobs maxRetrievers}
    {}
}
runProcess {
    {projectName applicationName processName}
    {actualParameter credential destinationProject enforceDependencies environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName environmentTemplateTierMapName keepOnError priority rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase scheduleName smartDeploy snapshotName stageArtifacts tierMapName tierResourceCount validate}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
getApplicationTiers {
    {projectName applicationName}
    {applicationEntityRevisionId}
    {}
}
getEnvironments {
    {projectName}
    {}
    {}
}
restartPipelineRun {
    {}
    {actualParameter comment flowRuntimeId flowRuntimeName projectName stageName taskName}
    {}
}
createPort {
    {projectName portName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName containerName containerPort environmentMapName environmentName environmentProjectName listenerPort protocol serviceClusterMappingName serviceEntityRevisionId serviceName subcontainer subport tierMapName}
    {}
}
modifyPort {
    {projectName portName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName containerName containerPort environmentMapName environmentName environmentProjectName listenerPort newName protocol serviceClusterMappingName serviceEntityRevisionId serviceName subcontainer subport tierMapName}
    {}
}
getReleaseTimelineDetails {
    {projectName releaseName}
    {}
    {}
}
getSnapshotEnvironments {
    {projectName applicationName snapshotName}
    {serviceName}
    {wrap 1 minRequiredArgs 1}
}
getLicenses {
    {}
    {}
    {}
}
import {
    {fileName}
    {batchSize disableProjectTracking disableSchedules force path preserveId preserveNames reducedDetailChangeHistory}
    {wrap 1 minRequiredArgs 0 auxArgs {file}}
}
modifyEnvironmentMap {
    {projectName environmentName}
    {description environmentMapName environmentProjectName serviceEntityRevisionId serviceName}
    {}
}
getJobStepStatus {
    {jobStepId}
    {}
    {}
}
moveStep {
    {projectName procedureName stepName}
    {beforeStep}
    {}
}
modifyResourceTemplate {
    {projectName resourceTemplateName}
    {cfgMgrParameter cfgMgrPluginKey cfgMgrProcedure cfgMgrProjectName cloudProviderParameter cloudProviderPluginKey cloudProviderProcedure cloudProviderProjectName description newName}
    {}
}
modifyProcessDependency {
    {projectName processName processStepName targetProcessStepName}
    {applicationName branchCondition branchConditionName branchConditionType branchType componentApplicationName componentName serviceApplicationName serviceName}
    {}
}
deleteReportObjectAssociation {
    {reportObjectTypeName associatedType}
    {}
    {}
}
provisionEnvironment {
    {projectName environmentName environmentTemplateName}
    {environmentTemplateProjectName keepOnError tierResourceCount}
    {xpath {/responses/response/jobId}}
}
createDeployer {
    {projectName deployerName}
    {}
    {hidden 1}
}
deleteHook {
    {hookName}
    {projectName resourceTemplateName}
    {}
}
getWorkspaces {
    {}
    {}
    {}
}
getWorkflowDefinition {
    {projectName workflowDefinitionName}
    {}
    {}
}
modifyApplication {
    {projectName applicationName}
    {description newName}
    {}
}
modifyGroup {
    {groupName}
    {migrateSettings newName removeAllUsers userName}
    {}
}
deleteEnvironmentTemplateTierMapping {
    {projectName applicationName environmentProjectName environmentTemplateName applicationTierName}
    {applicationEntityRevisionId}
    {}
}
logMessage {
    {message}
    {level logger}
    {hidden 1}
}
modifyDeployerService {
    {projectName serviceName}
    {afterLastRetry enforceDependencies errorHandling orderIndex processName releaseName retryApprover retryCount retryInterval retryNotificationTemplate retryType serviceProjectName snapshotName}
    {}
}
createStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {actualParameter description startable subprocedure subproject substartingState subworkflowDefinition}
    {}
}
modifyDeployer {
    {projectName deployerName}
    {newName}
    {hidden 1}
}
modifyDirectoryProvider {
    {providerName}
    {allowNestedGroupsApprovers commonGroupNameAttribute description domainName emailAttribute enableGroups fullUserNameAttribute groupBase groupMemberAttributes groupMemberFilter groupNameAttribute groupSearchFilter managerDn managerPassword membershipAttribute membershipFilter nestedGroupDepthLimit newName notifyUsersInNestedGroups providerType realm traverseHierarchy url useSSL userBase userNameAttribute userSearchFilter userSearchSubtree}
    {}
}
getStage {
    {projectName stageName}
    {pipelineName releaseName timeZone}
    {}
}
getPipelines {
    {projectName}
    {}
    {}
}
createContainer {
    {projectName containerName}
    {applicationName command cpuCount cpuLimit credentialName description entryPoint imageName imageVersion memoryLimit memorySize registryUri serviceName volumeMount}
    {}
}
resolveFile {
    {fromAgentId workspaceName}
    {jobId jobStepId resourceName}
    {hidden 1}
}
createResourcePool {
    {resourcePoolName}
    {autoDelete description orderingFilter resourceName resourcePoolDisabled}
    {}
}
getWorkflowDefinitions {
    {projectName}
    {}
    {}
}
runServiceProcess {
    {projectName serviceName processName}
    {actualParameter credential destinationProject enforceDependencies environmentMapName environmentName environmentProjectName priority scheduleName snapshotName validate}
    {wrap 1 xpath {/responses/response/jobId}}
}
cleanupRepository {
    {backingStoreDirectory}
    {force}
    {wrap 1 noresult 1}
}
startRelease {
    {projectName releaseName}
    {pipelineParameter priority scheduleName stagesToRun startingStage}
    {}
}
setDevOpsInsightServerConfiguration {
    {}
    {elasticSearchUrl enabled logStashUrl password testConnection userName}
    {}
}
modifyServiceMapDetail {
    {projectName containerName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clearActualParameters command cpuCount cpuLimit credentialName entryPoint environmentMapName environmentName environmentProjectName imageName imageVersion memoryLimit memorySize registryUri serviceClusterMappingName serviceEntityRevisionId serviceMapDetailName serviceName tierMapName volumeMount}
    {}
}
copyComponent {
    {projectName componentName newComponentName}
    {applicationTierName description fromApplicationName toApplicationName}
    {}
}
breakAclInheritance {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
deleteServiceDependency {
    {projectName serviceName}
    {dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName serviceDependencyName snapshotName}
    {}
}
getEnvironmentInventory {
    {projectName environmentName applicationName}
    {applicationEntityRevisionId environmentProjectName serviceEntityRevisionId serviceName}
    {wrap 1 minRequiredArgs 2}
}
modifyApplicationDependency {
    {projectName applicationName}
    {applicationDependencyName dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName effectiveDate newName snapshotName}
    {}
}
modifyWidgetFilterOverride {
    {projectName dashboardName widgetName dashboardFilterName}
    {description ignoreFilter parameterName}
    {}
}
deleteGateway {
    {gatewayName}
    {}
    {}
}
deleteArtifact {
    {artifactName}
    {}
    {}
}
modifyResource {
    {resourceName}
    {artifactCacheDirectory block description hostName hostType newName pools port proxyCustomization proxyHostName proxyPort proxyProtocol repositoryNames resourceDisabled resourcePools shell stepLimit trusted useSSL workspaceName zoneName}
    {}
}
incrementProperty {
    {propertyName incrementBy}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 minRequiredArgs 1 xpath {/responses/response/property/value}}
}
getEnvironmentVariables {
    {projectName}
    {applicationEntityRevisionId applicationName containerName environmentName environmentProjectName serviceEntityRevisionId serviceMapDetailName serviceName}
    {}
}
getPipelineStageRuntimeDeployerTasks {
    {flowRuntimeId stageName taskName}
    {firstResult groupRunNumber maxResults sortKey sortOrder stageRunNumber taskRunNumber}
    {}
}
getRelease {
    {projectName releaseName}
    {}
    {}
}
modifyTask {
    {projectName taskName}
    {actualParameter advancedMode afterLastRetry afterTask alwaysRun approver beforeTask clearActualParameters clearStageSummaryParameters condition deployerExpression deployerRunType description duration emailConfigName enabled environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName errorHandling firstTask gateCondition gateType groupName groupRunType insertRollingDeployManualStep instruction keepOnError newName notificationEnabled notificationTemplate parallelToPrevious pipelineName plannedEndDate plannedStartDate precondition releaseName requiredApprovalsCount resourceName retryCount retryInterval retryType rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase skippable snapshotName stageName stageSummaryParameters stagesToRun startTime startingStage subErrorHandling subapplication subpipeline subpluginKey subprocedure subprocess subproject subrelease subreleasePipeline subreleasePipelineProject subreleaseSuffix subservice subworkflowDefinition subworkflowStartingState taskProcessType taskType tierResourceCount timeZone triggerType useApproverAcl waitForPlannedStartDate workspaceName}
    {}
}
getCatalog {
    {projectName catalogName}
    {}
    {}
}
abortPipelineRun {
    {}
    {flowRuntimeId flowRuntimeName force projectName}
    {}
}
deleteWidgetFilterOverride {
    {projectName dashboardName widgetName dashboardFilterName}
    {}
    {}
}
getTags {
    {}
    {applicationName artifactName artifactVersionName componentName entityId entityType environmentName environmentTemplateName flowRuntimeId gateType includeApplicationComponents jobId pipelineName procedureName processName processStepName projectName releaseName resourceName resourceTemplateName serviceName stageName stepName taskName workflowDefinitionName workflowId}
    {}
}
pingAllResources {
    {}
    {block}
    {}
}
getDirectoryProviders {
    {}
    {}
    {}
}
getFlowStates {
    {projectName flowName}
    {}
    {hidden 1}
}
getEntityChange {
    {}
    {entityId entityPath entityType modifiedBy timeSince timeUntil}
    {}
}
deleteEnvironmentTemplateTierMap {
    {projectName applicationName environmentProjectName environmentTemplateName}
    {applicationEntityRevisionId}
    {}
}
getActualParameters {
    {}
    {applicationEntityRevisionId applicationName applicationServiceMappingName componentName dashboardName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName jobId jobStepId procedureName processName processStepName projectName releaseName scheduleName serviceClusterMappingName serviceMapDetailName serviceName stateDefinitionName stateName stepName tierMapName transitionDefinitionName transitionName widgetName workflowDefinitionName workflowName}
    {}
}
abortAllPipelineRuns {
    {projectName}
    {force pipelineName releaseName}
    {}
}
getService {
    {projectName serviceName}
    {applicationEntityRevisionId applicationName includeDetails serviceEntityRevisionId}
    {}
}
modifyProcess {
    {projectName processName}
    {applicationName componentApplicationName componentName credentialName description newName processType serviceApplicationName serviceName smartUndeployEnabled timeLimit timeLimitUnits workingDirectory workspaceName}
    {}
}
getRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {environmentName environmentTierName includeResourceCount}
    {}
}
clearAgentState {
    {}
    {}
    {hidden 1}
}
modifyPlugin {
    {pluginName}
    {author authorUrl category description extensionVersion label pluginWizardBased supportsConfigurations}
    {}
}
getReportObjectType {
    {reportObjectTypeName}
    {includeDetails}
    {}
}
modifyUser {
    {userName}
    {email fullUserName groupName migrateSettings newName password removeFromAllGroups sessionPassword}
    {wrap 1}
}
createEnvironmentTier {
    {projectName environmentName environmentTierName}
    {batchSize batchSizeType description resourceName resourcePhaseMapping resourcePoolName resourcePoolPhaseMapping}
    {}
}
deleteResource {
    {resourceName}
    {}
    {}
}
getOutputParameters {
    {}
    {flowRuntimeId jobId jobStepId}
    {}
}
getRunHierarchy {
    {}
    {flowRuntimeId pipelineName projectName releaseName}
    {}
}
modifyEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {description newName resourceCount resourceName resourceTemplateName resourceTemplateProjectName}
    {}
}
addResourcesToEnvironmentTier {
    {projectName environmentName environmentTierName}
    {resourceName resourcePhaseMapping}
    {}
}
tagObject {
    {}
    {applicationName artifactName artifactVersionName componentName entityId entityType environmentName environmentTemplateName flowRuntimeId gateType jobId pipelineName procedureName processName processStepName projectName releaseName resourceName resourceTemplateName serviceName stageName stepName tag taskName workflowDefinitionName workflowId}
    {}
}
validateDeployer {
    {projectName applicationName stageName}
    {actualParameter applicationProjectName deployerConfigurationName deployerTaskName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName insertRollingDeployManualStep processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase serviceName serviceProjectName validationType}
    {wrap 1 minRequiredArgs 1}
}
createStep {
    {projectName procedureName stepName}
    {actualParameter afterProcedureStep alwaysRun beforeProcedureStep broadcast command comment condition credentialName description errorHandling exclusive exclusiveMode logFileName parallel postProcessor precondition releaseExclusive releaseMode resourceName shell subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {wrap 1 auxArgs {commandFile}}
}
getFlows {
    {projectName}
    {}
    {hidden 1}
}
getProcedures {
    {projectName}
    {}
    {}
}
modifyDashboard {
    {projectName dashboardName}
    {clearPhases description layout newName phase type}
    {}
}
modifySnapshot {
    {projectName applicationName snapshotName}
    {componentVersion containerVersions description environmentName environmentProjectName newName serviceName}
    {wrap 1 minRequiredArgs 2}
}
getDeploymentHistoryItems {
    {projectName}
    {applicationName environmentName environmentProjectName latest processName serviceName snapshotName}
    {}
}
modifyContainer {
    {projectName containerName}
    {applicationName command cpuCount cpuLimit credentialName description entryPoint imageName imageVersion memoryLimit memorySize newName registryUri serviceName volumeMount}
    {}
}
modifyReportObjectType {
    {reportObjectTypeName}
    {description displayName newName storagePattern}
    {}
}
modifyStep {
    {projectName procedureName stepName}
    {actualParameter afterProcedureStep alwaysRun beforeProcedureStep broadcast clearActualParameters command comment condition credentialName description errorHandling exclusive exclusiveMode logFileName newName parallel postProcessor precondition releaseExclusive releaseMode resourceName shell subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {wrap 1 auxArgs {commandFile}}
}
getFlowTransitions {
    {projectName flowName flowStateName}
    {}
    {hidden 1}
}
deleteEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
abortJob {
    {jobId}
    {force reason}
    {}
}
getEnvironmentTemplates {
    {projectName}
    {}
    {}
}
deleteStep {
    {projectName procedureName stepName}
    {}
    {}
}
getComponents {
    {projectName}
    {applicationEntityRevisionId applicationName}
    {}
}
deleteTag {
    {tagName}
    {}
    {}
}
createEmailNotifier {
    {notifierName}
    {applicationName componentName condition configName description destinations environmentName eventType flowName flowRuntimeId flowRuntimeStateId flowStateName formattingTemplate gateType groupName jobId jobStepId notificationType pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {wrap 1 auxArgs {formattingTemplateFile}}
}
getResourcesInPool {
    {resourcePoolName}
    {jobStepId}
    {}
}
modifyEmailNotifier {
    {notifierName}
    {applicationName componentName condition configName description destinations environmentName eventType flowName flowRuntimeId flowRuntimeStateId flowStateName formattingTemplate gateType groupName jobId jobStepId newName notificationType pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {wrap 1 auxArgs {formattingTemplateFile}}
}
transitionWorkflow {
    {projectName workflowName stateName transitionName}
    {actualParameter credential}
    {}
}
getApplications {
    {projectName}
    {includeEntityRevisions referenceComponentName referenceComponentProject}
    {}
}
removeResourceFromEnvironmentTier {
    {resourceName projectName environmentName environmentTierName}
    {}
    {}
}
getEnvironmentTiers {
    {projectName environmentName}
    {}
    {}
}
deleteApplicationTier {
    {projectName applicationName applicationTierName}
    {}
    {}
}
getTransitionDefinitions {
    {projectName workflowDefinitionName stateDefinitionName}
    {targetState}
    {}
}
acquireNamedLock {
    {lockName create}
    {}
    {hidden 1}
}
getWorkflows {
    {projectName}
    {}
    {}
}
deleteSearchFilter {
    {displayName objectType}
    {userName}
    {}
}
createNote {
    {note}
    {noteName projectName releaseName}
    {}
}
deleteResourceTemplate {
    {projectName resourceTemplateName}
    {}
    {}
}
deleteSnapshot {
    {projectName applicationName snapshotName}
    {serviceName}
    {wrap 1 minRequiredArgs 2}
}
getTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {}
    {}
}
getSearchFilters {
    {}
    {objectType userName}
    {}
}
getResourcesInEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
addResourcesToPool {
    {resourcePoolName}
    {resourceName}
    {}
}
abortJobStep {
    {jobStepId}
    {force reason}
    {}
}
modifyDeployerConfiguration {
    {projectName applicationName stageName}
    {actualParameter applicationProjectName clearActualParameters deployerConfigurationName deployerTaskName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName insertRollingDeployManualStep newName processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase serviceName serviceProjectName skipDeploy}
    {wrap 1 minRequiredArgs 1}
}
createReportingFilter {
    {projectName dashboardName reportingFilterName}
    {description operator orderIndex parameterName reportObjectTypeName required type widgetName}
    {}
}
findObjects {
    {objectType}
    {filter firstResult includeAccess includeEntityRevisions includeLatestRevision maxIds numObjects quickSearchFilter select sort viewName}
    {hidden 1}
}
addResourceToEnvironmentTier {
    {resourceName projectName environmentName environmentTierName}
    {rollingDeployPhaseName}
    {}
}
doActionOnRealtimeCluster {
    {projectName clusterName objectId objectType action}
    {actionParameter environmentName}
    {}
}
getReportObjectAttributes {
    {reportObjectTypeName}
    {}
    {}
}
getApplicationDependencies {
    {projectName applicationName}
    {dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName snapshotName}
    {}
}
getReport {
    {projectName reportName}
    {}
    {}
}
createResource {
    {resourceName}
    {artifactCacheDirectory block description hostName hostType pools port proxyCustomization proxyHostName proxyPort proxyProtocol repositoryNames resourceDisabled resourcePools shell stepLimit trusted useSSL workspaceName zoneName}
    {}
}
createDirectoryProvider {
    {providerName}
    {allowNestedGroupsApprovers commonGroupNameAttribute description domainName emailAttribute enableGroups fullUserNameAttribute groupBase groupMemberAttributes groupMemberFilter groupNameAttribute groupSearchFilter managerDn managerPassword membershipAttribute membershipFilter nestedGroupDepthLimit notifyUsersInNestedGroups providerType realm traverseHierarchy url useSSL userBase userNameAttribute userSearchFilter userSearchSubtree}
    {}
}
deleteReport {
    {projectName reportName}
    {}
    {}
}
getDeployerConfiguration {
    {projectName applicationName stageName}
    {applicationProjectName deployerConfigurationName deployerTaskName releaseName serviceName serviceProjectName}
    {wrap 1 minRequiredArgs 1}
}
getReservations {
    {}
    {applicationName beginDate blackout endDate environmentName environmentProjectName environmentTierName includeTimeslots pipelineName projectName releaseName reserverType serviceName timeZone}
    {}
}
modifyArtifact {
    {artifactName}
    {artifactVersionNameTemplate description}
    {}
}
addSubrelease {
    {projectName releaseName subreleaseName}
    {subreleaseProject}
    {}
}
deleteFlow {
    {projectName flowName}
    {}
    {hidden 1}
}
getProperties {
    {}
    {applicationName applicationTierName artifactName artifactVersionName catalogName clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName expand flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertyName propertySheetId recurse releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1}
}
createWidgetFilterOverride {
    {projectName dashboardName widgetName dashboardFilterName}
    {description ignoreFilter parameterName}
    {}
}
createServiceClusterMapping {
    {projectName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName defaultCapacity environmentMapName environmentName environmentProjectName maxCapacity minCapacity serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName volume}
    {}
}
createWorkspace {
    {workspaceName}
    {agentDrivePath agentUncPath agentUnixPath credentialName description local workspaceDisabled zoneName}
    {}
}
getFormalParameters {
    {projectName}
    {applicationEntityRevisionId applicationName catalogItemName catalogName componentName dashboardName flowName flowStateName gateType pipelineName procedureName processName processStepName releaseName reportName scheduleName serviceName stageName stateDefinitionName stateName stepName taskName workflowDefinitionName workflowName}
    {}
}
getSearchFilter {
    {displayName objectType}
    {userName}
    {}
}
createDeployerApplication {
    {projectName applicationName}
    {afterLastRetry applicationProjectName enforceDependencies errorHandling orderIndex processName releaseName retryApprover retryCount retryInterval retryNotificationTemplate retryType smartDeploy snapshotName stageArtifacts}
    {}
}
createSchedule {
    {projectName scheduleName}
    {actualParameter applicationName applicationProjectName beginDate credentialName description endDate environmentMapName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName environmentTemplateTierMapName insertRollingDeployManualStep interval intervalUnits misfirePolicy monthDays pipelineName pipelineParameter priority procedureName processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase scheduleDisabled serviceName snapshotName stagesToRun startTime startingStage startingStateName stopTime tierMapName tierResourceCount timeZone weekDays workflowName}
    {}
}
modifyTag {
    {tagName}
    {description newName}
    {}
}
deleteReportObjectType {
    {reportObjectTypeName}
    {}
    {}
}
getServiceDependencies {
    {projectName serviceName}
    {dependentApplicationName dependentProjectName dependentServiceName dependentSnapshotName snapshotName}
    {}
}
describeObject {
    {objectName}
    {}
    {}
}
createWaitDependency {
    {projectName}
    {allowSkip assigneesForSkip dependentGateType dependentPipelineName dependentProjectName dependentReleaseName dependentStageName dependentTaskName gateType pipelineName releaseName stageName taskName waitDependencyName waitForTriggeredPipelines waitForTriggeredReleases}
    {}
}
getHooks {
    {}
    {projectName resourceTemplateName}
    {}
}
getServiceDeploymentDetails {
    {projectName serviceName clusterName}
    {applicationEntityRevisionId applicationName clusterProjectName environmentName jobStepId serviceEntityRevisionId}
    {}
}
removeDeployerService {
    {projectName serviceName}
    {releaseName serviceProjectName}
    {}
}
pruneChangeHistory {
    {daysToKeep}
    {forcePruneAll}
    {}
}
getJobInfo {
    {jobId}
    {}
    {}
}
retrieveArtifactVersions {
    {}
    {artifactName artifactVersionName groupId artifactKey versionRange includeDependents cacheDirectory repositoryNames toDirectory overwrite filter includePatterns excludePatterns patternsFile retryNumber}
    {locator 2 wrap 1 xpath /}
}
modifyFlowTransition {
    {targetState projectName flowName flowStateName flowTransitionName}
    {condition description newName}
    {hidden 1}
}
createReportObjectType {
    {reportObjectTypeName}
    {description displayName storagePattern}
    {}
}
getArtifacts {
    {}
    {}
    {}
}
createCluster {
    {projectName clusterName}
    {description environmentName pluginKey pluginProjectName providerClusterName providerProjectName provisionParameter provisionProcedure}
    {}
}
attachCredential {
    {projectName credentialName}
    {applicationName applicationProjectName componentName deployerTaskName gateType pipelineName procedureName processName processStepName releaseName scheduleName serviceName serviceProjectName stageName stateDefinitionName stepName taskName workflowDefinitionName}
    {}
}
getResourcePools {
    {}
    {}
    {}
}
getStep {
    {projectName procedureName stepName}
    {}
    {}
}
deletePort {
    {projectName portName}
    {applicationName applicationServiceMappingName clusterName containerName environmentMapName environmentName environmentProjectName serviceClusterMappingName serviceName tierMapName}
    {}
}
deleteActualParameter {
    {projectName procedureName stepName actualParameterName}
    {applicationName applicationServiceMappingName componentName dashboardName flowName flowStateName processName processStepName releaseName scheduleName serviceClusterMappingName serviceMapDetailName serviceName stateDefinitionName tierMapName transitionDefinitionName widgetName workflowDefinitionName}
    {}
}
getTasks {
    {projectName}
    {gateType pipelineName releaseName stageName validate}
    {}
}
retryProcessStep {
    {jobStepId}
    {action comment}
    {}
}
deleteWorkflowDefinition {
    {projectName workflowDefinitionName}
    {}
    {}
}
deleteProcess {
    {projectName processName}
    {applicationName componentApplicationName componentName serviceApplicationName serviceName}
    {}
}
createAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName catalogName changePermissionsPrivilege clusterName componentName configName containerName credentialName dashboardName environmentName environmentTemplateName environmentTemplateTierName environmentTierName executePrivilege flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId modifyPrivilege notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId readPrivilege releaseName reportName reportObjectTypeName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName searchFilterName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName tagName taskName transitionDefinitionName transitionName userName widgetName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
modifyJob {
    {jobId}
    {status}
    {wrap 1}
}
getContainers {
    {projectName}
    {applicationEntityRevisionId applicationName includeDetails serviceName}
    {}
}
validateFormalParameters {
    {procedureName}
    {actualParameter configurationParameter credential pluginName projectName}
    {hidden 1}
}
getServerInfo {
    {}
    {}
    {wrap 1}
}
getWaitDependency {
    {projectName}
    {dependentGateType dependentPipelineName dependentProjectName dependentReleaseName dependentStageName dependentTaskName gateType pipelineName releaseName stageName taskName waitDependencyName}
    {}
}
modifyTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {actualParameter clearActualParameters condition description newName targetState trigger}
    {}
}
removeComponentFromApplicationTier {
    {projectName applicationName applicationTierName componentName}
    {componentProjectName}
    {}
}
updateArtifactVersion {
    {}
    {version newVersion artifactName groupId artifactKey path followSymlinks includePatterns excludePatterns patternsFile fromDirectory description}
    {locator 2 wrap 1 xpath /}
}
getServerConfiguration {
    {}
    {configName}
    {hidden 1}
}
createPlugin {
    {key version projectName}
    {author authorUrl category description label pluginWizardBased supportsConfigurations}
    {wrap 1 minRequiredArgs 2 hidden 1}
}
getGroup {
    {groupName}
    {providerName traverseHierarchy}
    {}
}
getCertificates {
    {}
    {}
    {hidden 1}
}
getEnvironmentTemplateTierMaps {
    {projectName applicationName}
    {applicationEntityRevisionId orderByEnvironmentTemplateUsage}
    {}
}
getFormalOutputParameters {
    {projectName}
    {applicationName pipelineName procedureName processName releaseName serviceName}
    {}
}
getRealtimeClusterDetails {
    {projectName clusterName objectId objectType}
    {environmentName}
    {}
}
setDevOpsForesightConfiguration {
    {}
    {displayDevOpsForesightReportTypes enabled serverUrl}
    {hidden 1}
}
createCatalogItem {
    {projectName catalogName catalogItemName}
    {afterItem beforeItem buttonLabel description dslParamForm dslString firstItem iconUrl subpluginKey subprocedure subproject}
    {wrap 1 auxArgs {dslFile dslParamFormFile}}
}
getWaitingApprovals {
    {}
    {}
    {}
}
deleteUser {
    {userName}
    {}
    {}
}
deletePlugin {
    {pluginName}
    {}
    {}
}
createApplicationFromDeploymentPackage {
    {artifactGroup artifactKey artifactVersion artifactFileName}
    {dslString retrieveToFolder}
    {wrap 1 auxArgs {dslFile}}
}
createFlowTransition {
    {targetState projectName flowName flowStateName flowTransitionName}
    {condition description}
    {hidden 1}
}
getGateway {
    {gatewayName}
    {}
    {}
}
getReservation {
    {projectName reservationName}
    {beginDate endDate includeTimeslots timeZone}
    {}
}
removeResourcesFromEnvironmentTier {
    {projectName environmentName environmentTierName}
    {resourceName}
    {}
}
deleteUtilityResource {
    {projectName utilityResourceName}
    {environmentName environmentTemplateName}
    {}
}
uninstallPlugin {
    {pluginName}
    {timeout}
    {wrap 1}
}
deleteProcedure {
    {projectName procedureName}
    {}
    {}
}
modifyEnvTemplTierResourceTemplMapping {
    {resourceCount projectName environmentTemplateName resourceTemplateName environmentTemplateTierName}
    {resourceTemplateProjectName}
    {}
}
getContainer {
    {projectName containerName}
    {applicationEntityRevisionId applicationName includeDetails serviceName}
    {}
}
getRepositories {
    {}
    {}
    {}
}
getSchedules {
    {projectName}
    {applicationName applicationProjectName environmentMapName includeWorkflows pipelineName processName releaseName serviceName tierMapName}
    {}
}
deleteTask {
    {projectName taskName}
    {gateType pipelineName releaseName stageName}
    {}
}
deleteReportingFilter {
    {projectName dashboardName reportingFilterName}
    {widgetName}
    {}
}
getServiceClusterMappings {
    {projectName}
    {applicationEntityRevisionId applicationName clusterName clusterProjectName environmentMapName environmentName environmentProjectName includeDetails serviceEntityRevisionId serviceName tierMapName}
    {}
}
deleteDashboard {
    {projectName dashboardName}
    {}
    {}
}
deleteFlowTransition {
    {projectName flowName flowStateName flowTransitionName}
    {}
    {hidden 1}
}
createArtifact {
    {groupId artifactKey}
    {artifactVersionNameTemplate description}
    {}
}
runLearningPipeline {
    {}
    {}
    {hidden 1}
}
createComponent {
    {projectName componentName}
    {actualParameter applicationName credentialName description pluginKey pluginName pluginParameter reference sourceApplicationName sourceComponentName sourceProjectName}
    {}
}
importLicenseData {
    {licenseData}
    {}
    {}
}
getWorkflow {
    {projectName workflowName}
    {}
    {}
}
generateDsl {
    {path}
    {withAcls}
    {xpath {/responses/response/value}}
}
getDatabaseConfiguration {
    {}
    {}
    {wrap 1}
}
getTierMaps {
    {projectName applicationName}
    {applicationEntityRevisionId orderByEnvironmentUsage}
    {}
}
provisionResourcePool {
    {resourceCount resourcePoolName projectName resourceTemplateName}
    {keepOnError}
    {xpath {/responses/response/jobId}}
}
getRunSchedules {
    {}
    {beginDate endDate filter includeTimeslots timeZone}
    {}
}
getHook {
    {hookName}
    {projectName resourceTemplateName}
    {}
}
modifyProcessStep {
    {projectName processName processStepName}
    {actualParameter afterLastRetry afterProcessStep alwaysRun applicationName applicationTierName assignee beforeProcessStep clearActualParameters componentApplicationName componentName componentRollback credentialName dependencyJoinType description emailConfigName errorHandling includeCompParameterRef instruction newName notificationEnabled notificationTemplate processStepType retryCount retryInterval retryType rollbackSnapshot rollbackType rollbackUndeployProcess serviceApplicationName serviceName skipRollbackIfUndeployFails smartRollback subcomponent subcomponentApplicationName subcomponentProcess subprocedure subproject subservice subserviceProcess timeLimit timeLimitUnits useUtilityResource utilityResourceName workingDirectory workspaceName}
    {}
}
createWidget {
    {projectName dashboardName widgetName}
    {actualParameter attributeDataType attributePath colorRanges color description iconUrl linkParameter linkTarget orderIndex phase reportName reportProjectName section title visualization visualizationProperty}
    {}
}
getTransition {
    {projectName workflowName stateName transitionName}
    {}
    {}
}
getFlowTransition {
    {projectName flowName flowStateName flowTransitionName}
    {}
    {hidden 1}
}
getArtifactVersions {
    {}
    {artifactName retrieverJobId retrieverJobStepId}
    {}
}
createHook {
    {hookName}
    {broadcast description hookParameter hookType procedureName procedurePluginKey procedureProjectName projectName resourceTemplateName}
    {}
}
getEmailNotifiers {
    {}
    {applicationName componentName flowName flowRuntimeId flowRuntimeStateId flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName releaseName serviceName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
modifyCatalogItem {
    {projectName catalogName catalogItemName}
    {afterItem beforeItem buttonLabel description dslParamForm dslString firstItem iconUrl newName subpluginKey subprocedure subproject}
    {wrap 1 auxArgs {dslFile dslParamFormFile}}
}
modifyResourcePool {
    {resourcePoolName}
    {autoDelete description newName orderingFilter resourceName resourcePoolDisabled}
    {}
}
getResources {
    {}
    {}
    {}
}
getReportObjectAssociation {
    {reportObjectTypeName associatedType}
    {}
    {}
}
getCatalogs {
    {projectName}
    {}
    {}
}
tearDownEnvironment {
    {environmentName projectName}
    {}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
getPipelineRuntimeDetails {
    {}
    {flowRuntimeId}
    {}
}
createApplicationServiceMapping {
    {projectName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName defaultCapacity environmentMapName environmentName environmentProjectName maxCapacity minCapacity serviceClusterMappingName serviceEntityRevisionId serviceName tierMapName volume}
    {}
}
createUser {
    {userName}
    {email fullUserName groupName password}
    {wrap 1}
}
createProcess {
    {projectName processName}
    {applicationName componentApplicationName componentName credentialName description processType serviceApplicationName serviceName smartUndeployEnabled timeLimit timeLimitUnits workingDirectory workspaceName}
    {}
}
createRepository {
    {repositoryName}
    {description repositoryDisabled url zoneName}
    {}
}
getTransitions {
    {projectName workflowName stateName}
    {targetState}
    {}
}
getGateways {
    {}
    {}
    {}
}
sendReportingData {
    {reportObjectTypeName payload}
    {}
    {}
}
modifyReservation {
    {projectName reservationName}
    {applicationName beginDate blackout description endDate environmentName environmentProjectName environmentTierName monthDays newName overlap pipelineName recurrence recurrenceEndDate releaseName serviceName timeZone weekDays}
    {}
}
runPipeline {
    {projectName pipelineName}
    {actualParameter credential priority releaseName scheduleName stagesToRun startingStage}
    {}
}
getPlugins {
    {}
    {}
    {}
}
getJobs {
    {}
    {firstResult maxResults sortKey sortOrder status}
    {}
}
modifyComponent {
    {projectName componentName}
    {actualParameter applicationName clearActualParameters credentialName description newName pluginKey pluginName pluginParameter}
    {}
}
pauseTransactionRetries {
    {paused}
    {}
    {hidden 1}
}
getDeployerService {
    {projectName serviceName}
    {releaseName serviceProjectName}
    {}
}
getAdminLicense {
    {}
    {}
    {}
}
getEntityPath {
    {entityId entityType}
    {}
    {hidden 1}
}
getProjects {
    {}
    {}
    {}
}
