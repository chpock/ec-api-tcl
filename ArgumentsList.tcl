# Generated by ectool v7.0300
# Sun Oct 22 16:44:46 2017

modifyWorkflowDefinition {
    {projectName workflowDefinitionName}
    {description newName workflowNameTemplate}
    {}
}
dumpHeap {
    {fileName}
    {}
    {hidden 1}
}
getComponentsInApplicationTier {
    {projectName applicationName applicationTierName}
    {applicationEntityRevisionId includeArtifactDetail}
    {}
}
createEnvironment {
    {projectName environmentName}
    {applicationName applicationProjectName description environmentEnabled reservationRequired rollingDeployEnabled rollingDeployType}
    {}
}
getSchedule {
    {projectName scheduleName}
    {}
    {}
}
setLogLevel {
    {logger level}
    {}
    {hidden 1}
}
getUser {
    {userName}
    {providerName traverseHierarchy}
    {}
}
logout {
    {}
    {}
    {}
}
setProperty {
    {propertyName value}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName counter credentialName description environmentName environmentTemplateName environmentTemplateTierName environmentTierName expandable extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName value workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 minRequiredArgs 1 auxArgs {valueFile}}
}
modifyProcedure {
    {projectName procedureName}
    {credentialName description jobNameTemplate newName resourceName timeLimit timeLimitUnits workspaceName}
    {}
}
getVersions {
    {}
    {}
    {}
}
getFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationEntityRevisionId applicationName componentName flowName flowStateName gateType pipelineName processName processStepName stageName stateDefinitionName stateName taskName workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
deleteGroup {
    {groupName}
    {}
    {}
}
createJobStep {
    {}
    {actualParameter alwaysRun broadcast command comment condition credentialName credential errorHandling exclusive exclusiveMode external jobStepId jobStepName logFileName parallel parentPath postProcessor precondition procedureName projectName releaseExclusive releaseMode resourceName shell status stepName subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {locator 2}
}
getClusters {
    {projectName}
    {environmentName}
    {}
}
deleteRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {environmentName}
    {}
}
modifyEnvironment {
    {projectName environmentName}
    {description environmentEnabled newName reservationRequired rollingDeployEnabled rollingDeployType}
    {}
}
getApplicationServiceMappings {
    {projectName}
    {applicationEntityRevisionId applicationName environmentName environmentProjectName includeDetails tierMapName}
    {}
}
getWidget {
    {projectName dashboardName widgetName}
    {}
    {}
}
getServerStatus {
    {}
    {block diagnostics serverStateOnly timeout}
    {wrap 1}
}
createWorkflowDefinition {
    {projectName workflowDefinitionName}
    {description workflowNameTemplate}
    {}
}
getFullCredential {
    {credentialName jobStepId}
    {}
    {locator 1 wrap 1 minRequiredArgs 1 auxArgs {value}}
}
createRelease {
    {projectName releaseName}
    {actualParameter description pipelineName pipelineProjectName plannedEndDate plannedStartDate}
    {}
}
modifyDashboardFilter {
    {projectName dashboardFilterName dashboardName}
    {description newName operator orderIndex parameterName required type}
    {}
}
getStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {}
    {}
}
deleteEnvironmentTemplate {
    {projectName environmentTemplateName}
    {}
    {}
}
getEventSubscriptions {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
deleteEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
createEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
getEnvironmentApplications {
    {projectName environmentName}
    {}
    {}
}
getCluster {
    {projectName clusterName}
    {environmentName}
    {}
}
createArtifactVersion {
    {version}
    {artifactKey artifactName dependentArtifactVersion description groupId jobStepId repositoryName}
    {locator 2}
}
pauseScheduler {
    {paused}
    {}
    {hidden 1}
}
createReservation {
    {projectName reservationName}
    {applicationName beginDate blackout description endDate environmentName environmentProjectName environmentTierName monthDays overlap pipelineName recurrence recurrenceEndDate releaseName timeZone weekDays}
    {}
}
addResourceToEnvironmentTemplateTier {
    {resourceName projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
releaseNamedLock {
    {lockName}
    {delay}
    {hidden 1}
}
modifyRepository {
    {repositoryName}
    {description newName repositoryDisabled url zoneName}
    {}
}
deleteArtifactVersion {
    {artifactVersionName}
    {}
    {}
}
getWorkspace {
    {workspaceName}
    {}
    {}
}
getRollingDeployPhases {
    {projectName}
    {applicationName applicationProjectName environmentName environmentTierName includeResourceCount}
    {}
}
deletePipelineRun {
    {}
    {flowRuntimeId flowRuntimeName projectName}
    {}
}
getCatalogItem {
    {projectName catalogName catalogItemName}
    {}
    {}
}
deleteFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationName componentName flowName flowStateName gateType pipelineName processName processStepName stageName stateDefinitionName stateName taskName updateFormXml workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
pingResource {
    {resourceName}
    {}
    {}
}
getDashboards {
    {}
    {projectName}
    {}
}
deleteEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationName containerName environmentName environmentProjectName serviceMapDetailName serviceName}
    {}
}
createGroup {
    {groupName}
    {userName}
    {}
}
modifyRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {description environmentName newName orderIndex phaseExpression rollingDeployPhaseType}
    {}
}
modifyFlowState {
    {projectName flowName flowStateName}
    {condition credentialName description flowStateType newName parallelToPrevious precondition subapplication subflow subprocedure subprocess subproject}
    {hidden 1}
}
getEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationEntityRevisionId applicationName containerName environmentName environmentProjectName serviceMapDetailName serviceName}
    {}
}
getReleases {
    {projectName}
    {filter firstResult maxResults releaseFlowRuntimeMapping sortKey sortOrder}
    {wrap 1 minRequiredArgs 0}
}
modifyEnvironmentTier {
    {projectName environmentName environmentTierName}
    {batchSize batchSizeType description newName resourceName resourcePhaseMapping resourcePoolName resourcePoolPhaseMapping}
    {}
}
createPipeline {
    {projectName pipelineName}
    {description enabled type}
    {}
}
moveJobs {
    {sourceProject destinationProject}
    {}
    {}
}
validateServiceClusterMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentName environmentProjectName serviceName tierMapName}
    {}
}
getAccess {
    {}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName emulateRestoreInheritance environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gateType gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
getEnvironment {
    {projectName environmentName}
    {}
    {}
}
findJobSteps {
    {}
    {filter jobId jobStepId numObjects select}
    {hidden 1}
}
createActualParameter {
    {projectName procedureName stepName actualParameterName}
    {applicationName applicationServiceMappingName componentName flowName flowStateName processName processStepName releaseName scheduleName serviceMapDetailName stateDefinitionName tierMapName transitionDefinitionName value workflowDefinitionName}
    {}
}
findProperties {
    {}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName filter flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId maxIds notifierName numObjects objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName sort stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {hidden 1}
}
getServiceMapDetails {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName environmentName environmentProjectName includeDetails serviceName tierMapName}
    {}
}
deleteGate {
    {projectName stageName gateType}
    {pipelineName}
    {}
}
deleteRepository {
    {repositoryName}
    {}
    {}
}
createProcedure {
    {projectName procedureName}
    {credentialName description jobNameTemplate resourceName timeLimit timeLimitUnits workspaceName}
    {}
}
createEmailConfig {
    {configName}
    {description mailFrom mailHost mailPort mailProtocol mailUser mailUserPassword}
    {}
}
getDashboard {
    {projectName dashboardName}
    {includeDetails}
    {}
}
getJobStatus {
    {jobId}
    {}
    {}
}
createTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName targetState}
    {actualParameter condition description trigger}
    {}
}
moveStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {beforeStateDefinition}
    {}
}
modifyReport {
    {projectName reportName}
    {definition description newName parameters title uri}
    {}
}
completeManualTask {
    {flowRuntimeId stageName taskName}
    {action actualParameter evidence gateType}
    {}
}
getEmailConfig {
    {configName}
    {}
    {}
}
createResourceTemplate {
    {projectName resourceTemplateName}
    {cfgMgrParameter cfgMgrPluginKey cfgMgrProcedure cfgMgrProjectName cloudProviderParameter cloudProviderPluginKey cloudProviderProcedure cloudProviderProjectName description}
    {}
}
createEnvironmentTemplateTierMapping {
    {projectName applicationName}
    {applicationEntityRevisionId applicationTierName environmentProjectName environmentTemplateName environmentTemplateTierMapName environmentTemplateTierMappingName environmentTemplateTierName}
    {}
}
getPlugin {
    {pluginName}
    {}
    {}
}
createGate {
    {projectName stageName gateType}
    {condition description pipelineName precondition}
    {}
}
getRepository {
    {repositoryName}
    {}
    {}
}
getReleaseInventory {
    {projectName releaseName}
    {}
    {}
}
completeJob {
    {jobId}
    {force outcome}
    {}
}
deleteDashboardFilter {
    {projectName dashboardFilterName dashboardName}
    {}
    {}
}
getDeployerConfigurations {
    {projectName}
    {applicationName applicationProjectName releaseName stageName}
    {}
}
logStatistic {
    {name type value}
    {}
    {}
}
deleteEmailConfig {
    {configName}
    {}
    {}
}
addDependentsToArtifactVersion {
    {artifactVersionName}
    {dependentArtifactVersion}
    {}
}
deleteTierMapping {
    {projectName applicationName environmentProjectName environmentName applicationTierName}
    {applicationEntityRevisionId}
    {}
}
cleanupArtifactCache {
    {cacheDirectory}
    {force}
    {wrap 1 noresult 1}
}
getEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {environmentProjectName includeResourceDetails}
    {}
}
countObjects {
    {objectType}
    {filter}
    {hidden 1}
}
getFlowRuntimeDetails {
    {}
    {flowRuntimeId flowRuntimeName projectName}
    {hidden 1}
}
getTask {
    {projectName taskName}
    {gateType pipelineName stageName}
    {}
}
modifyProject {
    {projectName}
    {credentialName description newName resourceName tracked workspaceName}
    {}
}
modifyDeployerApplication {
    {projectName applicationName}
    {applicationProjectName errorHandling orderIndex processName releaseName smartDeploy snapshotName stageArtifacts}
    {}
}
modifyEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {applicationTierName artifactName artifactSource artifactUrl artifactVersion description environmentProjectName status}
    {}
}
getArtifact {
    {artifactName}
    {}
    {}
}
createEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {description resourceCount resourceName resourceTemplateName resourceTemplateProjectName}
    {}
}
createReport {
    {projectName reportName}
    {definition description parameters title uri}
    {}
}
completeManualProcessStep {
    {jobStepId}
    {action actualParameter comment}
    {}
}
modifyEnvironmentTemplate {
    {projectName environmentTemplateName}
    {description newName}
    {}
}
moveTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {beforeTransitionDefinition}
    {}
}
getLicense {
    {productName featureName}
    {}
    {}
}
getApplication {
    {projectName applicationName}
    {applicationEntityRevisionId}
    {}
}
shutdownServer {
    {}
    {force restart}
    {}
}
getProject {
    {projectName}
    {}
    {}
}
createTaskGroup {
    {projectName}
    {gateType groupName pipelineName stageName taskName}
    {}
}
getJobSummaries {
    {}
    {filter includeLastSuccess maxFailedSteps maxJobs maxRunningSteps}
    {hidden 1}
}
deleteZone {
    {zoneName}
    {}
    {}
}
createProject {
    {projectName}
    {credentialName description resourceName tracked workspaceName}
    {}
}
deleteDirectoryProvider {
    {providerName}
    {}
    {}
}
getStages {
    {projectName}
    {pipelineName}
    {}
}
createRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {description environmentName orderIndex phaseExpression rollingDeployPhaseType}
    {}
}
reloadSetupScripts {
    {}
    {}
    {hidden 1}
}
modifyNote {
    {noteName}
    {newName note projectName releaseName}
    {}
}
createStage {
    {projectName stageName}
    {afterStage beforeStage condition description parallelToPrevious pipelineName precondition}
    {}
}
runProcedure {
    {projectName}
    {actualParameter credentialName credential destinationProject password priority procedureName scheduleName userName}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
graphStateMachine {
    {jobId}
    {cluster}
    {hidden 1}
}
createServiceMapDetail {
    {projectName containerName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName command cpuCount cpuLimit credentialName entryPoint environmentName environmentProjectName imageName imageVersion memoryLimit memorySize registryUri serviceMapDetailName serviceName tierMapName volumeMount}
    {}
}
getDirectoryProvider {
    {providerName}
    {}
    {}
}
modifyStage {
    {projectName stageName}
    {afterStage beforeStage condition description newName parallelToPrevious pipelineName precondition}
    {}
}
getFlow {
    {projectName flowName}
    {}
    {hidden 1}
}
createApplicationDependency {
    {projectName applicationName}
    {applicationDependencyName dependentApplicationName dependentProjectName dependentSnapshotName effectiveDate snapshotName}
    {}
}
completeFlowRuntimeState {
    {flowRuntimeStateId}
    {action evidence}
    {hidden 1}
}
deleteCatalog {
    {projectName catalogName}
    {}
    {}
}
createEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationName containerName description environmentName environmentProjectName serviceMapDetailName serviceName type value}
    {}
}
getReports {
    {projectName}
    {}
    {}
}
deleteEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {environmentProjectName}
    {}
}
createSnapshot {
    {projectName applicationName snapshotName}
    {componentVersion containerVersions description environmentName environmentProjectName}
    {}
}
modifyEmailConfig {
    {configName}
    {description mailFrom mailHost mailPort mailProtocol mailUser mailUserPassword newName}
    {}
}
clone {
    {}
    {applicationName applicationTierName artifactName artifactVersionName cloneName componentName configName containerName credentialName disableProjectTracking environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId providerName reducedDetailChangeHistory releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {wrap 1}
}
runFlow {
    {projectName flowName}
    {actualParameter credential priority startingState}
    {hidden 1}
}
deleteContainer {
    {projectName containerName}
    {applicationName serviceName}
    {}
}
createEnvironmentInventoryItem {
    {projectName environmentName applicationName componentName resourceName}
    {applicationTierName artifactName artifactSource artifactUrl artifactVersion description environmentProjectName status}
    {}
}
getWaitingTasks {
    {flowRuntimeId stageName}
    {deployerTaskName taskName}
    {wrap 1}
}
modifyTierMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationTierName environmentName environmentProjectName environmentTierName newName tierMapName tierMappingName}
    {}
}
modifyGateway {
    {gatewayName}
    {description gatewayDisabled hostName1 hostName2 newName port1 port2 resourceName1 resourceName2}
    {}
}
getNotes {
    {}
    {projectName releaseName}
    {}
}
modifyApplicationTier {
    {projectName applicationName applicationTierName}
    {description newName}
    {}
}
seedEnvironmentInventory {
    {projectName environmentName applicationName applicationProcessName status}
    {artifactName artifactSource artifactUrl artifactVersion componentName environmentProjectName resourceName snapshotName}
    {}
}
deleteStage {
    {projectName stageName}
    {pipelineName}
    {}
}
modifyZone {
    {zoneName}
    {description newName}
    {}
}
createDashboard {
    {projectName dashboardName}
    {description layout shared}
    {}
}
removeResourcesFromPool {
    {resourcePoolName}
    {resourceName}
    {}
}
getManifest {
    {artifactVersionName}
    {}
    {wrap 1 noresult 1}
}
setDatabaseConfiguration {
    {}
    {customDatabaseDialect customDatabaseDriver customDatabaseUrl databaseName databaseType hostName ignorePasskeyMismatch ignoreServerMismatch password port preserveSessions userName}
    {wrap 1}
}
moveRepository {
    {repositoryName}
    {beforeRepositoryName}
    {}
}
getZones {
    {}
    {}
    {}
}
getServiceMapDetail {
    {projectName containerName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName environmentName environmentProjectName includeDetails serviceMapDetailName serviceName tierMapName}
    {}
}
completeRelease {
    {}
    {projectName releaseId releaseName}
    {}
}
getDeployerApplications {
    {projectName}
    {releaseName}
    {}
}
getComponent {
    {projectName componentName}
    {applicationEntityRevisionId applicationName}
    {}
}
getGate {
    {projectName stageName gateType}
    {pipelineName}
    {}
}
restoreAclInheritance {
    {}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
createCatalog {
    {projectName catalogName}
    {description iconUrl}
    {}
}
addComponentToApplicationTier {
    {projectName applicationName applicationTierName componentName}
    {componentProjectName}
    {}
}
setTierResourcePhase {
    {projectName environmentName environmentTierName}
    {resourceName resourcePhaseMapping resourcePoolName resourcePoolPhaseMapping rollingDeployPhaseName}
    {}
}
addResourcePoolToEnvironmentTier {
    {resourcePoolName projectName environmentName environmentTierName}
    {rollingDeployPhaseName}
    {}
}
getDashboardFilters {
    {projectName dashboardName}
    {}
    {}
}
modifyFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationName componentName defaultValue description expansionDeferred flowName flowStateName gateType label newName orderIndex pipelineName processName processStepName required stageName stateDefinitionName stateName taskName type updateFormXml workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
getGroups {
    {}
    {filter includeAll maximum}
    {wrap 1}
}
removeResourceFromEnvironmentTemplateTier {
    {resourceName projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getAllWaitingTasks {
    {projectName}
    {releaseName}
    {}
}
runReport {
    {projectName reportName}
    {filter}
    {}
}
dumpStatistics {
    {}
    {clearStatistics dumpLapTimes fileName format}
    {hidden 1}
}
getEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
modifyApplicationServiceMapping {
    {projectName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clearActualParameters clusterName clusterProjectName defaultCapacity environmentName environmentProjectName maxCapacity minCapacity serviceName tierMapName volume}
    {}
}
deleteWidget {
    {projectName dashboardName widgetName}
    {}
    {}
}
getProcedure {
    {projectName procedureName}
    {}
    {}
}
deleteObjects {
    {objectType}
    {filter maxIds sort}
    {hidden 1}
}
removeDependentsFromArtifactVersion {
    {artifactVersionName}
    {dependentArtifactVersion}
    {}
}
modifyStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {actualParameter clearActualParameters description newName startable subprocedure subproject substartingState subworkflowDefinition}
    {}
}
attachParameter {
    {projectName procedureName stepName formalParameterName}
    {applicationName componentApplicationName componentName gateType pipelineName processName processStepName stageName stateDefinitionName taskName workflowDefinitionName}
    {}
}
deleteProcessDependency {
    {projectName processName processStepName targetProcessStepName}
    {applicationName componentApplicationName componentName}
    {}
}
getProcess {
    {projectName processName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName}
    {}
}
createDashboardFilter {
    {projectName dashboardFilterName dashboardName}
    {description operator orderIndex parameterName required type}
    {}
}
getWidgets {
    {projectName dashboardName}
    {}
    {}
}
installPlugin {
    {url}
    {disableProjectTracking force reducedDetailChangeHistory}
    {wrap 1 xpath {/responses/response[plugin]}}
}
abortFlowRuntime {
    {}
    {flowRuntimeId flowRuntimeName force projectName}
    {hidden 1}
}
createDeployerConfiguration {
    {projectName applicationName stageName}
    {actualParameter applicationProjectName deployerTaskName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName insertRollingDeployManualStep releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase skipDeploy}
    {}
}
findArtifactVersions {
    {}
    {artifactKey artifactName artifactVersionName filter groupId includeDependents jobStepId versionRange}
    {locator 2 hidden 1}
}
removeTaskGroup {
    {projectName}
    {gateType groupName pipelineName stageName}
    {}
}
modifyCredential {
    {projectName credentialName}
    {description newName password passwordRecoveryAllowed userName}
    {}
}
modifyHook {
    {hookName}
    {broadcast description hookParameter hookType newName procedureName procedurePluginKey procedureProjectName projectName resourceTemplateName}
    {}
}
modifyProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName counter credentialName credentialProtected description environmentName environmentTemplateName environmentTemplateTierName environmentTierName expandable extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId newName notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId propertyType releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName value workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 auxArgs {valueFile}}
}
expandString {
    {value}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 minRequiredArgs 0 auxArgs {valueFile} xpath {/responses/response/value}}
}
modifyArtifactVersion {
    {artifactVersionName}
    {artifactVersionState dependentArtifactVersion description newName removeAllDependentArtifactVersions repositoryName}
    {}
}
getSnapshots {
    {projectName applicationName}
    {}
    {}
}
createGateway {
    {gatewayName}
    {description gatewayDisabled hostName1 hostName2 port1 port2 resourceName1 resourceName2}
    {}
}
getApplicationTiersInComponent {
    {projectName componentName}
    {applicationEntityRevisionId applicationName}
    {}
}
modifyCluster {
    {projectName clusterName}
    {description environmentName newName pluginKey pluginProjectName providerClusterName providerProjectName provisionParameter provisionProcedure}
    {}
}
getCatalogItems {
    {projectName catalogName}
    {}
    {}
}
modifyRelease {
    {projectName releaseName}
    {actualParameter clearActualParameters description newName pipelineName pipelineProjectName plannedEndDate plannedStartDate}
    {}
}
deletePipeline {
    {projectName pipelineName}
    {}
    {}
}
createJob {
    {}
    {destinationProject jobNameTemplate procedureName projectName status}
    {wrap 1}
}
deleteCluster {
    {projectName clusterName}
    {environmentName}
    {}
}
getDeployerApplication {
    {projectName applicationName}
    {applicationProjectName releaseName}
    {}
}
removeResourceTemplateFromEnvironmentTemplateTier {
    {projectName environmentTemplateName resourceTemplateName environmentTemplateTierName}
    {resourceTemplateProjectName}
    {}
}
deleteComponent {
    {projectName componentName}
    {applicationName}
    {}
}
deleteReservation {
    {projectName reservationName}
    {}
    {}
}
tearDown {
    {}
    {environmentName projectName resourceName resourcePoolName}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
export {
    {fileName}
    {compress disableProjectTracking download excludeJobs objectId objectType path reducedDetailChangeHistory relocatable revisionNumber safeMode withAcls withNotifiers withVersionNumbers}
    {}
}
modifyFlow {
    {projectName flowName}
    {actualParameter clearActualParameters credentialName description newName}
    {hidden 1}
}
deleteNote {
    {noteName}
    {projectName releaseName}
    {}
}
evalDsl {
    {dsl}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName debug describe environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId parameters path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serverLibraryPath serviceName sessionPassword snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName timeout transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 auxArgs {dslFile parametersFile}}
}
getZone {
    {zoneName}
    {}
    {}
}
deleteResourcePool {
    {resourcePoolName}
    {}
    {}
}
deleteApplicationDependency {
    {projectName applicationName}
    {applicationDependencyName dependentApplicationName dependentProjectName dependentSnapshotName snapshotName}
    {}
}
completeJobStep {
    {jobStepId}
    {exitCode force outcome}
    {}
}
getStateDefinitions {
    {projectName workflowDefinitionName}
    {includeFormalParameters startableOnly}
    {}
}
modifyGate {
    {projectName stageName gateType}
    {condition description pipelineName precondition}
    {}
}
testDirectoryProvider {
    {userName password}
    {allowNestedGroupsApprovers commonGroupNameAttribute domainName emailAttribute enableGroups fullUserNameAttribute groupBase groupMemberAttributes groupMemberFilter groupNameAttribute groupSearchFilter managerDn managerPassword membershipAttribute membershipFilter nestedGroupDepthLimit notifyUsersInNestedGroups providerType realm traverseHierarchy url useDefaults useSSL userBase userNameAttribute userSearchFilter userSearchSubtree}
    {}
}
revert {
    {objectId objectType revisionNumber}
    {}
    {}
}
createSearchFilter {
    {objectType searchFilterName}
    {filter quickSearchFilter}
    {wrap 1 hidden 1}
}
validateDatabase {
    {}
    {options}
    {hidden 1}
}
getResourceTemplate {
    {projectName resourceTemplateName}
    {}
    {}
}
deleteEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getResourceUsage {
    {}
    {}
    {}
}
getEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
createProcessDependency {
    {projectName processName processStepName targetProcessStepName}
    {applicationName branchCondition branchConditionName branchConditionType branchType componentApplicationName componentName}
    {}
}
tunePerformance {
    {}
    {apiQueueSize dbConnectionPoolSize dbThreadPoolSize dispatchQueueSize quartzQueueSize stateMachineQueueSize}
    {hidden 1}
}
resolveRoute {
    {toRepositoryName}
    {fromAgentId fromResourceName}
    {hidden 1}
}
modifyEnvironmentVariable {
    {projectName environmentVariableName}
    {applicationName containerName description environmentName environmentProjectName newName serviceMapDetailName serviceName type value}
    {}
}
getAvailableResourcesForEnvironment {
    {}
    {includePoolUsage objectTypeToReturn}
    {}
}
exportPlugin {
    {pluginName fileName}
    {download}
    {}
}
addUsersToGroup {
    {groupName}
    {userName}
    {}
}
getProcesses {
    {projectName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName}
    {}
}
getResourceTemplates {
    {projectName}
    {}
    {}
}
deleteWorkspace {
    {workspaceName}
    {}
    {}
}
publishArtifactVersion {
    {}
    {version artifactName groupId artifactKey compress followSymlinks includePatterns excludePatterns patternsFile fromDirectory description repositoryName dependentArtifactVersion}
    {locator 2 wrap 1 xpath /}
}
deleteLicense {
    {productName featureName}
    {}
    {}
}
deleteServiceMapDetail {
    {projectName containerName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName environmentName environmentProjectName serviceMapDetailName serviceName tierMapName}
    {}
}
getSnapshot {
    {projectName applicationName snapshotName}
    {}
    {}
}
modifyEnvironmentTemplateTierMapping {
    {projectName applicationName}
    {applicationEntityRevisionId applicationTierName environmentProjectName environmentTemplateName environmentTemplateTierMapName environmentTemplateTierMappingName environmentTemplateTierName newName}
    {}
}
modifyPipeline {
    {projectName pipelineName}
    {description enabled newName type}
    {}
}
getLicenseUsage {
    {}
    {}
    {}
}
createEnvironmentTemplate {
    {projectName environmentTemplateName}
    {description}
    {}
}
getProcessSteps {
    {projectName processName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName}
    {}
}
getObjects {
    {}
    {includeAccess includeLatestRevision objectId select}
    {hidden 1}
}
createService {
    {projectName serviceName}
    {applicationName defaultCapacity description maxCapacity minCapacity volume}
    {}
}
getJobSummary {
    {}
    {jobId jobProperties jobStepProperties}
    {}
}
getApplicationTier {
    {projectName applicationName applicationTierName}
    {applicationEntityRevisionId}
    {}
}
getEnvironmentInventoryItems {
    {projectName environmentName}
    {includeResourceDetails}
    {}
}
getPartialApplicationRevision {
    {projectName applicationName revisionNumber}
    {}
    {}
}
promotePlugin {
    {pluginName}
    {promoted}
    {wrap 1 xpath {/responses/response[plugin]}}
}
getProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName expand extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 xpath {/responses/response/property/value /responses/response/property}}
}
createFlowState {
    {projectName flowName flowStateName}
    {condition credentialName description flowStateType parallelToPrevious precondition subapplication subflow subprocedure subprocess subproject}
    {hidden 1}
}
removeResourcePoolFromEnvironmentTier {
    {resourcePoolName projectName environmentName environmentTierName}
    {}
    {}
}
changeOwner {
    {}
    {applicationName applicationTierName componentName configName credentialName environmentName environmentTemplateName environmentTierName groupName newOwnerName notifierName pluginName procedureName processName processStepName projectName propertySheetId resourceName scheduleName stateDefinitionName stepName transitionDefinitionName userName workflowDefinitionName workspaceName}
    {}
}
signCertificate {
    {certificateData}
    {}
    {hidden 1}
}
modifyService {
    {projectName serviceName}
    {applicationName defaultCapacity description maxCapacity minCapacity newName volume}
    {}
}
evalScript {
    {value}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 xpath {/responses/response/value}}
}
createTask {
    {projectName taskName}
    {actualParameter advancedMode afterTask approver beforeTask condition deployerExpression deployerRunType description enabled environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName errorHandling firstTask gateCondition gateType groupName insertRollingDeployManualStep instruction keepOnError notificationTemplate parallelToPrevious pipelineName precondition rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase skippable snapshotName stageName startTime subapplication subpluginKey subprocedure subprocess subproject subworkflowDefinition subworkflowStartingState taskProcessType taskType tierResourceCount workspaceName}
    {}
}
createEnvironmentTemplateTierMap {
    {projectName applicationName environmentProjectName environmentTemplateName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
getFormalParameterOptions {
    {formalParameterName procedureName}
    {actualParameter configurationParameter credential pluginName projectName}
    {hidden 1}
}
getResourceTemplatesInEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
getEnvironmentTemplateTiers {
    {projectName environmentTemplateName}
    {includeTemplateDetails}
    {}
}
modifySearchFilter {
    {objectType searchFilterName}
    {filter quickSearchFilter}
    {wrap 1 hidden 1}
}
deleteFlowRuntime {
    {}
    {flowRuntimeId flowRuntimeName projectName}
    {hidden 1}
}
getSteps {
    {projectName procedureName}
    {}
    {}
}
deleteTierMap {
    {projectName applicationName environmentProjectName environmentName}
    {applicationEntityRevisionId}
    {}
}
getPipelineRuntimesForSchedule {
    {projectName scheduleName}
    {}
    {hidden 1}
}
deleteProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1}
}
modifyEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
deleteEmailNotifier {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
deleteEnvironment {
    {projectName environmentName}
    {}
    {}
}
deleteApplication {
    {projectName applicationName}
    {foreground}
    {}
}
deleteFlowState {
    {projectName flowName flowStateName}
    {}
    {hidden 1}
}
getProvisionedEnvironments {
    {}
    {flowRuntimeId jobId stageName}
    {}
}
searchEntityChange {
    {}
    {entityId entityPath entityType modifiedBy timeSince timeUntil}
    {}
}
getRetrievedArtifacts {
    {jobId}
    {componentName resourceName}
    {}
}
getResourcesInEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
getResource {
    {resourceName}
    {}
    {}
}
createFormalParameter {
    {projectName procedureName formalParameterName}
    {applicationName componentName defaultValue description expansionDeferred flowName flowStateName gateType label orderIndex pipelineName processName processStepName required stageName stateDefinitionName stateName taskName type updateFormXml workflowDefinitionName workflowName}
    {wrap 1 minRequiredArgs 2}
}
deleteJob {
    {jobId}
    {waitForDeleteToComplete}
    {}
}
getPorts {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName containerName environmentName environmentProjectName serviceName tierMapName}
    {}
}
getPipelineStageRuntimeTasks {
    {flowRuntimeId}
    {firstResult maxResults sortKey sortOrder stageName}
    {}
}
deleteTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {}
    {}
}
getPipeline {
    {projectName pipelineName}
    {}
    {}
}
getCredentials {
    {projectName}
    {usableOnly}
    {}
}
createTierMap {
    {projectName applicationName environmentProjectName environmentName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
removeUsersFromGroup {
    {groupName}
    {userName}
    {}
}
getState {
    {projectName workflowName stateName}
    {}
    {}
}
modifyCatalog {
    {projectName catalogName}
    {description iconUrl newName}
    {}
}
deleteCatalogItem {
    {projectName catalogName catalogItemName}
    {}
    {}
}
getUsers {
    {}
    {filter includeAll maximum searchField}
    {wrap 1}
}
getFlowState {
    {projectName flowName flowStateName}
    {}
    {hidden 1}
}
getCredential {
    {projectName credentialName}
    {}
    {}
}
deleteProject {
    {projectName}
    {foreground}
    {}
}
getStates {
    {projectName workflowName}
    {}
    {}
}
detachParameter {
    {projectName procedureName stepName formalParameterName}
    {applicationName componentApplicationName componentName gateType pipelineName processName processStepName stageName stateDefinitionName taskName workflowDefinitionName}
    {}
}
modifySchedule {
    {projectName scheduleName}
    {actualParameter beginDate clearActualParameters clearPipelineParameters credentialName description endDate environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName environmentTemplateTierMapName insertRollingDeployManualStep interval intervalUnits misfirePolicy monthDays newName pipelineName pipelineParameter priority procedureName processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase scheduleDisabled snapshotName stagesToRun startTime startingStage startingStateName stopTime tierMapName tierResourceCount timeZone weekDays workflowName}
    {}
}
createCredential {
    {projectName credentialName userName password}
    {description passwordRecoveryAllowed}
    {minRequiredArgs 2}
}
getResourcePoolsInEnvironmentTier {
    {projectName environmentName environmentTierName}
    {}
    {}
}
getEntityChangeDetails {
    {entityId entityType revisionNumber}
    {}
    {}
}
removeDeployerConfiguration {
    {projectName applicationName stageName}
    {applicationProjectName releaseName}
    {}
}
modifyEnvironmentTemplateTierMap {
    {projectName applicationName environmentProjectName environmentTemplateName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
deleteWorkflow {
    {projectName workflowName}
    {deleteProcesses}
    {}
}
getAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
setJobName {
    {jobId newName}
    {}
    {envArgTrans {COMMANDER_JOBID 0} envRequired {jobName}}
}
getServices {
    {projectName}
    {applicationEntityRevisionId applicationName includeDetails}
    {}
}
getJobNotes {
    {jobId}
    {}
    {}
}
deleteService {
    {projectName serviceName}
    {applicationName}
    {}
}
modifyActualParameter {
    {projectName procedureName stepName actualParameterName}
    {applicationName applicationServiceMappingName componentName flowName flowStateName newName processName processStepName releaseName scheduleName serviceMapDetailName stateDefinitionName tierMapName transitionDefinitionName value workflowDefinitionName}
    {}
}
login {
    {userName password}
    {}
    {wrap 1}
}
getJobDetails {
    {jobId}
    {structureOnly}
    {}
}
deleteRelease {
    {projectName releaseName}
    {}
    {}
}
deleteCredential {
    {projectName credentialName}
    {}
    {}
}
createTierMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationTierName environmentName environmentProjectName environmentTierName tierMapName tierMappingName}
    {}
}
getJobsForSchedule {
    {projectName scheduleName}
    {}
    {}
}
getEmailConfigs {
    {}
    {}
    {}
}
runDiscovery {
    {pluginKey pluginName projectName environmentName environmentTierName configurationName}
    {resourceName}
    {}
}
getApplicationServiceMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentName environmentProjectName includeDetails serviceName tierMapName}
    {}
}
getPipelineRuntimes {
    {}
    {filter firstResult flowRuntimeId flowRuntimeName maxResults pipelineName projectName releaseId sortKey sortOrder}
    {}
}
getResourcePool {
    {resourcePoolName}
    {}
    {}
}
modifyWorkspace {
    {workspaceName}
    {agentDrivePath agentUncPath agentUnixPath credentialName description local newName workspaceDisabled zoneName}
    {}
}
abortAllJobs {
    {}
    {force reason}
    {}
}
getPort {
    {projectName portName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName containerName environmentName environmentProjectName serviceName tierMapName}
    {}
}
createProcessStep {
    {projectName processName processStepName}
    {actualParameter afterProcessStep applicationName applicationTierName assignee beforeProcessStep componentApplicationName componentName componentRollback credentialName dependencyJoinType description errorHandling includeCompParameterRef instruction notificationTemplate processStepType rollbackSnapshot rollbackType rollbackUndeployProcess skipRollbackIfUndeployFails smartRollback subcomponent subcomponentApplicationName subcomponentProcess subprocedure subproject subservice timeLimit timeLimitUnits workspaceName}
    {}
}
modifyTierMap {
    {projectName applicationName environmentProjectName environmentName}
    {applicationEntityRevisionId tierMapName tierMapping}
    {}
}
getEmailNotifier {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
modifyJobStep {
    {jobStepId}
    {actualParameter alwaysRun broadcast command comment condition errorHandling exclusive exclusiveMode logFileName parallel postProcessor precondition releaseExclusive releaseMode resourceName shell status subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {}
}
addResourceTemplateToEnvironmentTemplateTier {
    {projectName environmentTemplateName resourceTemplateName environmentTemplateTierName}
    {resourceCount resourceTemplateProjectName}
    {}
}
deleteApplicationServiceMapping {
    {projectName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName environmentName environmentProjectName serviceName tierMapName}
    {}
}
getProcessDependencies {
    {projectName processName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName}
    {}
}
deleteProcessStep {
    {projectName processName processStepName}
    {applicationName componentApplicationName componentName}
    {}
}
deleteStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {}
    {}
}
finishCommand {
    {agentRequestId status}
    {deletedLogFile deletedPostpLogFile elapsedTime errorMessage exit maxProtocolVersion minProtocolVersion pingToken postpExit protocolVersion version}
    {hidden 1}
}
modifyWidget {
    {projectName dashboardName widgetName}
    {attributeDataType attributePath clearAttributeDataTypes clearAttributePaths clearColors color description iconUrl newName orderIndex reportName reportProjectName title visualization}
    {}
}
createFlow {
    {projectName flowName}
    {actualParameter credentialName description}
    {hidden 1}
}
deleteAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
getNote {
    {noteName}
    {projectName releaseName}
    {}
}
getActualParameter {
    {actualParameterName}
    {applicationEntityRevisionId applicationName applicationServiceMappingName componentName flowName flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName jobId jobStepId procedureName processName processStepName projectName releaseName scheduleName serviceMapDetailName stateDefinitionName stateName stepName tierMapName transitionDefinitionName transitionName workflowDefinitionName workflowName}
    {}
}
createApplication {
    {projectName applicationName}
    {description}
    {}
}
createProperty {
    {propertyName}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName counter credentialName credentialProtected description environmentName environmentTemplateName environmentTemplateTierName environmentTierName expandable extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId propertyType releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName value workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 wrap 1 auxArgs {valueFile}}
}
runWorkflow {
    {projectName workflowDefinitionName}
    {actualParameter credential priority scheduleName startingState}
    {}
}
getJobStepDetails {
    {jobStepId}
    {structureOnly}
    {}
}
detachCredential {
    {projectName credentialName}
    {applicationName applicationProjectName componentName pipelineName procedureName processName processStepName releaseName scheduleName stageName stateDefinitionName stepName taskName workflowDefinitionName}
    {}
}
deleteSchedule {
    {projectName scheduleName}
    {}
    {}
}
getProcessStep {
    {projectName processName processStepName}
    {applicationEntityRevisionId applicationName componentApplicationName componentName}
    {}
}
completeWorkflow {
    {projectName workflowName}
    {}
    {}
}
getEnvironmentTemplate {
    {projectName environmentTemplateName}
    {}
    {}
}
modifyAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName changePermissionsPrivilege componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName executePrivilege flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId modifyPrivilege notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId readPrivilege releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
sendEmail {
    {}
    {attachment bcc cc configName header html inline mailFrom mailHost mailPort mailProtocol mailUser mailUserPassword multipartMode raw subject text to}
    {wrap 1 auxArgs {textFile htmlFile rawFile}}
}
createApplicationTier {
    {projectName applicationName applicationTierName}
    {description}
    {}
}
checkAccess {
    {}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
createZone {
    {zoneName}
    {description}
    {}
}
removeDeployerApplication {
    {projectName applicationName}
    {applicationProjectName releaseName}
    {}
}
moveDirectoryProvider {
    {providerName}
    {beforeProviderName}
    {}
}
getArtifactVersion {
    {artifactVersionName}
    {includeRetrieverJobSteps includeRetrieverJobs maxRetrievers}
    {}
}
runProcess {
    {projectName applicationName processName}
    {actualParameter credential destinationProject enforceDependencies environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName environmentTemplateTierMapName keepOnError priority rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase scheduleName smartDeploy snapshotName stageArtifacts tierMapName tierResourceCount validate}
    {wrap 1 auxArgs {pollInterval timeout} xpath {/responses/response/jobId}}
}
getApplicationTiers {
    {projectName applicationName}
    {applicationEntityRevisionId}
    {}
}
getEnvironments {
    {projectName}
    {}
    {}
}
createPort {
    {projectName portName}
    {applicationName applicationServiceMappingName clusterName containerName containerPort environmentName environmentProjectName listenerPort protocol serviceName subcontainer subport tierMapName}
    {}
}
modifyPort {
    {projectName portName}
    {applicationName applicationServiceMappingName clusterName containerName containerPort environmentName environmentProjectName listenerPort newName protocol serviceName subcontainer subport tierMapName}
    {}
}
getSnapshotEnvironments {
    {projectName applicationName snapshotName}
    {}
    {}
}
getLicenses {
    {}
    {}
    {}
}
import {
    {fileName}
    {batchSize disableProjectTracking disableSchedules force path preserveId preserveNames reducedDetailChangeHistory}
    {wrap 1 minRequiredArgs 0 auxArgs {file}}
}
getJobStepStatus {
    {jobStepId}
    {}
    {}
}
modifyResourceTemplate {
    {projectName resourceTemplateName}
    {cfgMgrParameter cfgMgrPluginKey cfgMgrProcedure cfgMgrProjectName cloudProviderParameter cloudProviderPluginKey cloudProviderProcedure cloudProviderProjectName description newName}
    {}
}
moveStep {
    {projectName procedureName stepName}
    {beforeStep}
    {}
}
modifyProcessDependency {
    {projectName processName processStepName targetProcessStepName}
    {applicationName branchCondition branchConditionName branchConditionType branchType componentApplicationName componentName}
    {}
}
provisionEnvironment {
    {projectName environmentName environmentTemplateName}
    {environmentTemplateProjectName keepOnError tierResourceCount}
    {xpath {/responses/response/jobId}}
}
createDeployer {
    {projectName deployerName}
    {}
    {hidden 1}
}
deleteHook {
    {hookName}
    {projectName resourceTemplateName}
    {}
}
getWorkspaces {
    {}
    {}
    {}
}
getWorkflowDefinition {
    {projectName workflowDefinitionName}
    {}
    {}
}
modifyApplication {
    {projectName applicationName}
    {description newName}
    {}
}
modifyGroup {
    {groupName}
    {migrateSettings newName removeAllUsers userName}
    {}
}
deleteEnvironmentTemplateTierMapping {
    {projectName applicationName environmentProjectName environmentTemplateName applicationTierName}
    {applicationEntityRevisionId}
    {}
}
logMessage {
    {message}
    {level logger}
    {hidden 1}
}
createStateDefinition {
    {projectName workflowDefinitionName stateDefinitionName}
    {actualParameter description startable subprocedure subproject substartingState subworkflowDefinition}
    {}
}
getDashboardFilter {
    {projectName dashboardFilterName dashboardName}
    {}
    {}
}
modifyDeployer {
    {projectName deployerName}
    {newName}
    {hidden 1}
}
modifyDirectoryProvider {
    {providerName}
    {allowNestedGroupsApprovers commonGroupNameAttribute description domainName emailAttribute enableGroups fullUserNameAttribute groupBase groupMemberAttributes groupMemberFilter groupNameAttribute groupSearchFilter managerDn managerPassword membershipAttribute membershipFilter nestedGroupDepthLimit newName notifyUsersInNestedGroups providerType realm traverseHierarchy url useSSL userBase userNameAttribute userSearchFilter userSearchSubtree}
    {}
}
getStage {
    {projectName stageName}
    {pipelineName}
    {}
}
getPipelines {
    {projectName}
    {}
    {}
}
createContainer {
    {projectName containerName}
    {applicationName command cpuCount cpuLimit credentialName description entryPoint imageName imageVersion memoryLimit memorySize registryUri serviceName volumeMount}
    {}
}
resolveFile {
    {fromAgentId workspaceName}
    {jobId jobStepId resourceName}
    {hidden 1}
}
createResourcePool {
    {resourcePoolName}
    {autoDelete description orderingFilter resourceName resourcePoolDisabled}
    {}
}
getWorkflowDefinitions {
    {projectName}
    {}
    {}
}
cleanupRepository {
    {backingStoreDirectory}
    {force}
    {wrap 1 noresult 1}
}
startRelease {
    {projectName releaseName}
    {pipelineParameter priority scheduleName stagesToRun startingStage}
    {}
}
copyComponent {
    {projectName componentName newComponentName}
    {applicationTierName description fromApplicationName toApplicationName}
    {}
}
breakAclInheritance {
    {}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
modifyServiceMapDetail {
    {projectName containerName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clearActualParameters command cpuCount cpuLimit credentialName entryPoint environmentName environmentProjectName imageName imageVersion memoryLimit memorySize registryUri serviceMapDetailName serviceName tierMapName volumeMount}
    {}
}
getEnvironmentInventory {
    {projectName environmentName applicationName}
    {applicationEntityRevisionId environmentProjectName}
    {}
}
modifyApplicationDependency {
    {projectName applicationName}
    {applicationDependencyName dependentApplicationName dependentProjectName dependentSnapshotName effectiveDate newName snapshotName}
    {}
}
deleteGateway {
    {gatewayName}
    {}
    {}
}
deleteArtifact {
    {artifactName}
    {}
    {}
}
modifyResource {
    {resourceName}
    {artifactCacheDirectory block description hostName hostType newName pools port proxyCustomization proxyHostName proxyPort proxyProtocol repositoryNames resourceDisabled resourcePools shell stepLimit trusted useSSL workspaceName zoneName}
    {}
}
incrementProperty {
    {propertyName incrementBy}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName extendedContextSearch flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertySheetId releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1 minRequiredArgs 1 xpath {/responses/response/property/value}}
}
getEnvironmentVariables {
    {projectName}
    {applicationEntityRevisionId applicationName containerName environmentName environmentProjectName serviceMapDetailName serviceName}
    {}
}
getPipelineStageRuntimeDeployerTasks {
    {flowRuntimeId stageName taskName}
    {firstResult maxResults sortKey sortOrder}
    {}
}
getRelease {
    {projectName releaseName}
    {}
    {}
}
getCatalog {
    {projectName catalogName}
    {}
    {}
}
modifyTask {
    {projectName taskName}
    {actualParameter advancedMode afterTask approver beforeTask clearActualParameters condition deployerExpression deployerRunType description enabled environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName errorHandling firstTask gateCondition gateType groupName insertRollingDeployManualStep instruction keepOnError newName notificationTemplate parallelToPrevious pipelineName precondition rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase skippable snapshotName stageName startTime subapplication subpluginKey subprocedure subprocess subproject subworkflowDefinition subworkflowStartingState taskProcessType taskType tierResourceCount workspaceName}
    {}
}
abortPipelineRun {
    {}
    {flowRuntimeId flowRuntimeName force projectName}
    {}
}
getDirectoryProviders {
    {}
    {}
    {}
}
pingAllResources {
    {}
    {block}
    {}
}
getFlowStates {
    {projectName flowName}
    {}
    {hidden 1}
}
getEntityChange {
    {}
    {entityId entityPath entityType modifiedBy timeSince timeUntil}
    {}
}
deleteEnvironmentTemplateTierMap {
    {projectName applicationName environmentProjectName environmentTemplateName}
    {applicationEntityRevisionId}
    {}
}
getActualParameters {
    {}
    {applicationEntityRevisionId applicationName applicationServiceMappingName componentName flowName flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName jobId jobStepId procedureName processName processStepName projectName releaseName scheduleName serviceMapDetailName stateDefinitionName stateName stepName tierMapName transitionDefinitionName transitionName workflowDefinitionName workflowName}
    {}
}
abortAllPipelineRuns {
    {projectName}
    {force pipelineName releaseName}
    {}
}
getService {
    {projectName serviceName}
    {applicationName includeDetails}
    {}
}
getRollingDeployPhase {
    {projectName rollingDeployPhaseName}
    {environmentName environmentTierName includeResourceCount}
    {}
}
modifyProcess {
    {projectName processName}
    {applicationName componentApplicationName componentName credentialName description newName processType smartUndeployEnabled timeLimit timeLimitUnits workspaceName}
    {}
}
clearAgentState {
    {}
    {}
    {hidden 1}
}
modifyPlugin {
    {pluginName}
    {author authorUrl category description extensionVersion label pluginWizardBased supportsConfigurations}
    {}
}
modifyUser {
    {userName}
    {email fullUserName groupName migrateSettings newName password removeFromAllGroups sessionPassword}
    {wrap 1}
}
createEnvironmentTier {
    {projectName environmentName environmentTierName}
    {batchSize batchSizeType description resourceName resourcePhaseMapping resourcePoolName resourcePoolPhaseMapping}
    {}
}
deleteResource {
    {resourceName}
    {}
    {}
}
modifyEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {description newName resourceCount resourceName resourceTemplateName resourceTemplateProjectName}
    {}
}
addResourcesToEnvironmentTier {
    {projectName environmentName environmentTierName}
    {resourceName resourcePhaseMapping}
    {}
}
validateDeployer {
    {projectName applicationName stageName}
    {actualParameter applicationProjectName deployerTaskName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName insertRollingDeployManualStep releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase validationType}
    {}
}
createStep {
    {projectName procedureName stepName}
    {actualParameter afterProcedureStep alwaysRun beforeProcedureStep broadcast command comment condition credentialName description errorHandling exclusive exclusiveMode logFileName parallel postProcessor precondition releaseExclusive releaseMode resourceName shell subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {wrap 1 auxArgs {commandFile}}
}
getFlows {
    {projectName}
    {}
    {hidden 1}
}
getProcedures {
    {projectName}
    {}
    {}
}
modifyDashboard {
    {projectName dashboardName}
    {description layout newName shared}
    {}
}
getDeploymentHistoryItems {
    {projectName}
    {applicationName environmentName environmentProjectName latest processName snapshotName}
    {}
}
modifyContainer {
    {projectName containerName}
    {applicationName command cpuCount cpuLimit credentialName description entryPoint imageName imageVersion memoryLimit memorySize newName registryUri serviceName volumeMount}
    {}
}
modifySnapshot {
    {projectName applicationName snapshotName}
    {componentVersion containerVersions description environmentName environmentProjectName newName}
    {}
}
modifyStep {
    {projectName procedureName stepName}
    {actualParameter afterProcedureStep alwaysRun beforeProcedureStep broadcast clearActualParameters command comment condition credentialName description errorHandling exclusive exclusiveMode logFileName newName parallel postProcessor precondition releaseExclusive releaseMode resourceName shell subprocedure subproject timeLimit timeLimitUnits workingDirectory workspaceName}
    {wrap 1 auxArgs {commandFile}}
}
getFlowTransitions {
    {projectName flowName flowStateName}
    {}
    {hidden 1}
}
deleteEventSubscription {
    {notifierName}
    {applicationName componentName flowName flowStateName gateType groupName jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {}
}
abortJob {
    {jobId}
    {force reason}
    {}
}
getEnvironmentTemplates {
    {projectName}
    {}
    {}
}
getComponents {
    {projectName}
    {applicationEntityRevisionId applicationName}
    {}
}
deleteStep {
    {projectName procedureName stepName}
    {}
    {}
}
createEmailNotifier {
    {notifierName}
    {applicationName componentName condition configName description destinations environmentName eventType flowName flowStateName formattingTemplate gateType groupName jobId jobStepId notificationType pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {wrap 1 auxArgs {formattingTemplateFile}}
}
getResourcesInPool {
    {resourcePoolName}
    {jobStepId}
    {}
}
modifyEmailNotifier {
    {notifierName}
    {applicationName componentName condition configName description destinations environmentName eventType flowName flowStateName formattingTemplate gateType groupName jobId jobStepId newName notificationType pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName userName workflowDefinitionName workflowName}
    {wrap 1 auxArgs {formattingTemplateFile}}
}
transitionWorkflow {
    {projectName workflowName stateName transitionName}
    {actualParameter credential}
    {}
}
getApplications {
    {projectName}
    {includeEntityRevisions referenceComponentName referenceComponentProject}
    {}
}
removeResourceFromEnvironmentTier {
    {resourceName projectName environmentName environmentTierName}
    {}
    {}
}
getEnvironmentTiers {
    {projectName environmentName}
    {}
    {}
}
deleteApplicationTier {
    {projectName applicationName applicationTierName}
    {}
    {}
}
getTransitionDefinitions {
    {projectName workflowDefinitionName stateDefinitionName}
    {targetState}
    {}
}
acquireNamedLock {
    {lockName create}
    {}
    {hidden 1}
}
getWorkflows {
    {projectName}
    {}
    {}
}
deleteSearchFilter {
    {objectType searchFilterName}
    {}
    {hidden 1}
}
createNote {
    {note}
    {noteName projectName releaseName}
    {}
}
deleteResourceTemplate {
    {projectName resourceTemplateName}
    {}
    {}
}
deleteSnapshot {
    {projectName applicationName snapshotName}
    {}
    {}
}
getTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {}
    {}
}
getSearchFilters {
    {objectType}
    {}
    {hidden 1}
}
getResourcesInEnvironmentTemplateTier {
    {projectName environmentTemplateName environmentTemplateTierName}
    {}
    {}
}
addResourcesToPool {
    {resourcePoolName}
    {resourceName}
    {}
}
abortJobStep {
    {jobStepId}
    {force reason}
    {}
}
modifyDeployerConfiguration {
    {projectName applicationName stageName}
    {actualParameter applicationProjectName clearActualParameters deployerTaskName environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName insertRollingDeployManualStep releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase skipDeploy}
    {}
}
findObjects {
    {objectType}
    {filter firstResult includeAccess includeEntityRevisions includeLatestRevision maxIds numObjects quickSearchFilter select sort viewName}
    {hidden 1}
}
addResourceToEnvironmentTier {
    {resourceName projectName environmentName environmentTierName}
    {rollingDeployPhaseName}
    {}
}
getApplicationDependencies {
    {projectName applicationName}
    {dependentApplicationName dependentProjectName dependentSnapshotName snapshotName}
    {}
}
getReport {
    {projectName reportName}
    {}
    {}
}
createResource {
    {resourceName}
    {artifactCacheDirectory block description hostName hostType pools port proxyCustomization proxyHostName proxyPort proxyProtocol repositoryNames resourceDisabled resourcePools shell stepLimit trusted useSSL workspaceName zoneName}
    {}
}
createDirectoryProvider {
    {providerName}
    {allowNestedGroupsApprovers commonGroupNameAttribute description domainName emailAttribute enableGroups fullUserNameAttribute groupBase groupMemberAttributes groupMemberFilter groupNameAttribute groupSearchFilter managerDn managerPassword membershipAttribute membershipFilter nestedGroupDepthLimit notifyUsersInNestedGroups providerType realm traverseHierarchy url useSSL userBase userNameAttribute userSearchFilter userSearchSubtree}
    {}
}
deleteReport {
    {projectName reportName}
    {}
    {}
}
getDeployerConfiguration {
    {projectName applicationName stageName}
    {applicationProjectName releaseName}
    {}
}
getReservations {
    {}
    {applicationName beginDate blackout endDate environmentName environmentProjectName environmentTierName includeTimeslots pipelineName projectName releaseName reserverType timeZone}
    {}
}
modifyArtifact {
    {artifactName}
    {artifactVersionNameTemplate description}
    {}
}
deleteFlow {
    {projectName flowName}
    {}
    {hidden 1}
}
getProperties {
    {}
    {applicationName applicationTierName artifactName artifactVersionName componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName expand flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId notifierName objectId path pipelineName pluginName procedureName processName processStepName projectName propertyName propertySheetId recurse releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {locator 1}
}
createWorkspace {
    {workspaceName}
    {agentDrivePath agentUncPath agentUnixPath credentialName description local workspaceDisabled zoneName}
    {}
}
getFormalParameters {
    {projectName}
    {applicationEntityRevisionId applicationName componentName flowName flowStateName gateType pipelineName procedureName processName processStepName scheduleName stageName stateDefinitionName stateName stepName taskName workflowDefinitionName workflowName}
    {}
}
getSearchFilter {
    {objectType searchFilterName}
    {}
    {hidden 1}
}
createDeployerApplication {
    {projectName applicationName}
    {applicationProjectName errorHandling orderIndex processName releaseName smartDeploy snapshotName stageArtifacts}
    {}
}
createSchedule {
    {projectName scheduleName}
    {actualParameter applicationName applicationProjectName beginDate credentialName description endDate environmentName environmentProjectName environmentTemplateName environmentTemplateProjectName environmentTemplateTierMapName insertRollingDeployManualStep interval intervalUnits misfirePolicy monthDays pipelineName pipelineParameter priority procedureName processName releaseName rollingDeployEnabled rollingDeployManualStepAssignee rollingDeployManualStepCondition rollingDeployPhase scheduleDisabled snapshotName stagesToRun startTime startingStage startingStateName stopTime tierMapName tierResourceCount timeZone weekDays workflowName}
    {}
}
describeObject {
    {objectName}
    {}
    {}
}
getHooks {
    {}
    {projectName resourceTemplateName}
    {}
}
getServiceDeploymentDetails {
    {projectName serviceName clusterName}
    {applicationEntityRevisionId applicationName clusterProjectName environmentName jobStepId}
    {}
}
pruneChangeHistory {
    {daysToKeep}
    {forcePruneAll}
    {}
}
getJobInfo {
    {jobId}
    {}
    {}
}
retrieveArtifactVersions {
    {}
    {artifactName artifactVersionName groupId artifactKey versionRange includeDependents cacheDirectory repositoryNames toDirectory overwrite filter includePatterns excludePatterns patternsFile retryNumber}
    {locator 2 wrap 1 xpath /}
}
modifyFlowTransition {
    {targetState projectName flowName flowStateName flowTransitionName}
    {condition description newName}
    {hidden 1}
}
getArtifacts {
    {}
    {}
    {}
}
createCluster {
    {projectName clusterName}
    {description environmentName pluginKey pluginProjectName providerClusterName providerProjectName provisionParameter provisionProcedure}
    {}
}
attachCredential {
    {projectName credentialName}
    {applicationName applicationProjectName componentName pipelineName procedureName processName processStepName releaseName scheduleName stageName stateDefinitionName stepName taskName workflowDefinitionName}
    {}
}
getResourcePools {
    {}
    {}
    {}
}
getStep {
    {projectName procedureName stepName}
    {}
    {}
}
deletePort {
    {projectName portName}
    {applicationName applicationServiceMappingName clusterName containerName environmentName environmentProjectName serviceName tierMapName}
    {}
}
deleteActualParameter {
    {projectName procedureName stepName actualParameterName}
    {applicationName applicationServiceMappingName componentName flowName flowStateName processName processStepName releaseName scheduleName serviceMapDetailName stateDefinitionName tierMapName transitionDefinitionName workflowDefinitionName}
    {}
}
getTasks {
    {projectName}
    {gateType pipelineName stageName}
    {}
}
deleteWorkflowDefinition {
    {projectName workflowDefinitionName}
    {}
    {}
}
deleteProcess {
    {projectName processName}
    {applicationName componentApplicationName componentName}
    {}
}
createAclEntry {
    {principalType principalName}
    {applicationName applicationTierName artifactName artifactVersionName changePermissionsPrivilege componentName configName containerName credentialName environmentName environmentTemplateName environmentTemplateTierName environmentTierName executePrivilege flowName flowRuntimeId flowRuntimeName flowRuntimeStateId flowRuntimeStateName flowStateName flowTransitionName gatewayName groupName jobId jobStepId modifyPrivilege notifierName objectId objectType path pipelineName pluginName procedureName processName processStepName projectName propertySheetId readPrivilege releaseName repositoryName resourceName resourcePoolName resourceTemplateName scheduleName serviceName snapshotName stageName stateDefinitionName stateName stepName systemObjectName taskName transitionDefinitionName transitionName userName workflowDefinitionName workflowName workspaceName zoneName}
    {}
}
modifyJob {
    {jobId}
    {status}
    {wrap 1}
}
getContainers {
    {projectName}
    {applicationEntityRevisionId applicationName includeDetails serviceName}
    {}
}
validateFormalParameters {
    {procedureName}
    {actualParameter configurationParameter credential pluginName projectName}
    {hidden 1}
}
getServerInfo {
    {}
    {}
    {wrap 1}
}
modifyTransitionDefinition {
    {projectName workflowDefinitionName stateDefinitionName transitionDefinitionName}
    {actualParameter clearActualParameters condition description newName targetState trigger}
    {}
}
removeComponentFromApplicationTier {
    {projectName applicationName applicationTierName componentName}
    {componentProjectName}
    {}
}
updateArtifactVersion {
    {}
    {version newVersion artifactName groupId artifactKey path followSymlinks includePatterns excludePatterns patternsFile fromDirectory description}
    {locator 2 wrap 1 xpath /}
}
createPlugin {
    {key version projectName}
    {author authorUrl category description label pluginWizardBased supportsConfigurations}
    {wrap 1 minRequiredArgs 2 hidden 1}
}
getGroup {
    {groupName}
    {providerName traverseHierarchy}
    {}
}
getCertificates {
    {}
    {}
    {hidden 1}
}
getEnvironmentTemplateTierMaps {
    {projectName applicationName}
    {applicationEntityRevisionId orderByEnvironmentTemplateUsage}
    {}
}
createCatalogItem {
    {projectName catalogName catalogItemName}
    {buttonLabel description dslParamForm dslString iconUrl subpluginKey subprocedure subproject}
    {wrap 1 auxArgs {dslFile dslParamFormFile}}
}
deleteUser {
    {userName}
    {}
    {}
}
deletePlugin {
    {pluginName}
    {}
    {}
}
createApplicationFromDeploymentPackage {
    {artifactGroup artifactKey artifactVersion artifactFileName}
    {dslString retrieveToFolder}
    {wrap 1 auxArgs {dslFile}}
}
createFlowTransition {
    {targetState projectName flowName flowStateName flowTransitionName}
    {condition description}
    {hidden 1}
}
getGateway {
    {gatewayName}
    {}
    {}
}
getReservation {
    {projectName reservationName}
    {beginDate endDate includeTimeslots timeZone}
    {}
}
removeResourcesFromEnvironmentTier {
    {projectName environmentName environmentTierName}
    {resourceName}
    {}
}
uninstallPlugin {
    {pluginName}
    {timeout}
    {wrap 1}
}
deleteProcedure {
    {projectName procedureName}
    {}
    {}
}
modifyEnvTemplTierResourceTemplMapping {
    {resourceCount projectName environmentTemplateName resourceTemplateName environmentTemplateTierName}
    {resourceTemplateProjectName}
    {}
}
getContainer {
    {projectName containerName}
    {applicationEntityRevisionId applicationName includeDetails serviceName}
    {}
}
getRepositories {
    {}
    {}
    {}
}
getSchedules {
    {projectName}
    {applicationName applicationProjectName includeWorkflows pipelineName processName releaseName tierMapName}
    {}
}
deleteTask {
    {projectName taskName}
    {gateType pipelineName stageName}
    {}
}
deleteDashboard {
    {projectName dashboardName}
    {}
    {}
}
deleteFlowTransition {
    {projectName flowName flowStateName flowTransitionName}
    {}
    {hidden 1}
}
createArtifact {
    {groupId artifactKey}
    {artifactVersionNameTemplate description}
    {}
}
createComponent {
    {projectName componentName}
    {actualParameter applicationName credentialName description pluginKey pluginName pluginParameter reference sourceApplicationName sourceComponentName sourceProjectName}
    {}
}
importLicenseData {
    {licenseData}
    {}
    {}
}
getWorkflow {
    {projectName workflowName}
    {}
    {}
}
getDatabaseConfiguration {
    {}
    {}
    {wrap 1}
}
generateDsl {
    {path}
    {withAcls}
    {xpath {/responses/response/value}}
}
getTierMaps {
    {projectName applicationName}
    {applicationEntityRevisionId orderByEnvironmentUsage}
    {}
}
provisionResourcePool {
    {resourceCount resourcePoolName projectName resourceTemplateName}
    {keepOnError}
    {xpath {/responses/response/jobId}}
}
getRunSchedules {
    {}
    {beginDate endDate filter includeTimeslots timeZone}
    {}
}
getHook {
    {hookName}
    {projectName resourceTemplateName}
    {}
}
modifyProcessStep {
    {projectName processName processStepName}
    {actualParameter afterProcessStep applicationName applicationTierName assignee beforeProcessStep clearActualParameters componentApplicationName componentName componentRollback credentialName dependencyJoinType description errorHandling includeCompParameterRef instruction newName notificationTemplate processStepType rollbackSnapshot rollbackType rollbackUndeployProcess skipRollbackIfUndeployFails smartRollback subcomponent subcomponentApplicationName subcomponentProcess subprocedure subproject subservice timeLimit timeLimitUnits workspaceName}
    {}
}
createWidget {
    {projectName dashboardName widgetName}
    {attributeDataType attributePath color description iconUrl orderIndex reportName reportProjectName title visualization}
    {}
}
getTransition {
    {projectName workflowName stateName transitionName}
    {}
    {}
}
getFlowTransition {
    {projectName flowName flowStateName flowTransitionName}
    {}
    {hidden 1}
}
getArtifactVersions {
    {}
    {artifactName retrieverJobId retrieverJobStepId}
    {}
}
createHook {
    {hookName}
    {broadcast description hookParameter hookType procedureName procedurePluginKey procedureProjectName projectName resourceTemplateName}
    {}
}
getEmailNotifiers {
    {}
    {applicationName componentName flowName flowStateName gateType jobId jobStepId pipelineName procedureName processName processStepName projectName stageName stateDefinitionName stateName stepName workflowDefinitionName workflowName}
    {}
}
modifyCatalogItem {
    {projectName catalogName catalogItemName}
    {buttonLabel description dslParamForm dslString iconUrl newName subpluginKey subprocedure subproject}
    {wrap 1 auxArgs {dslFile dslParamFormFile}}
}
modifyResourcePool {
    {resourcePoolName}
    {autoDelete description newName orderingFilter resourceName resourcePoolDisabled}
    {}
}
getResources {
    {}
    {}
    {}
}
getCatalogs {
    {projectName}
    {}
    {}
}
getPipelineRuntimeDetails {
    {}
    {flowRuntimeId}
    {}
}
createApplicationServiceMapping {
    {projectName}
    {actualParameter applicationEntityRevisionId applicationName applicationServiceMappingName clusterName clusterProjectName defaultCapacity environmentName environmentProjectName maxCapacity minCapacity serviceName tierMapName volume}
    {}
}
createUser {
    {userName}
    {email fullUserName groupName password}
    {wrap 1}
}
createProcess {
    {projectName processName}
    {applicationName componentApplicationName componentName credentialName description processType smartUndeployEnabled timeLimit timeLimitUnits workspaceName}
    {}
}
createRepository {
    {repositoryName}
    {description repositoryDisabled url zoneName}
    {}
}
getTransitions {
    {projectName workflowName stateName}
    {targetState}
    {}
}
getGateways {
    {}
    {}
    {}
}
sendReportingData {
    {reportDataFields reportDataType}
    {customReportType documentId eventType source sourceUri timeBased}
    {}
}
modifyReservation {
    {projectName reservationName}
    {applicationName beginDate blackout description endDate environmentName environmentProjectName environmentTierName monthDays newName overlap pipelineName recurrence recurrenceEndDate releaseName timeZone weekDays}
    {}
}
runPipeline {
    {projectName pipelineName}
    {actualParameter credential priority scheduleName stagesToRun startingStage}
    {}
}
getPlugins {
    {}
    {}
    {}
}
getJobs {
    {}
    {firstResult maxResults sortKey sortOrder status}
    {}
}
modifyComponent {
    {projectName componentName}
    {actualParameter applicationName clearActualParameters credentialName description newName pluginKey pluginName pluginParameter}
    {}
}
pauseTransactionRetries {
    {paused}
    {}
    {hidden 1}
}
getAdminLicense {
    {}
    {}
    {}
}
getEntityPath {
    {entityId entityType}
    {}
    {hidden 1}
}
getProjects {
    {}
    {}
    {}
}
